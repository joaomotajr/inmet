//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace FlexImage.WebService.ControlWebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ControlServiceBinding", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class ControlWSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSuggestedCloseDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSuggestedOpenDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback openControlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ControlWSService() {
            this.Url = global::FlexImage.WebService.Properties.Settings.Default.FlexImage_WSControl_ControlWebReference_ControlWSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkControlCompletedEventHandler checkControlCompleted;
        
        /// <remarks/>
        public event closeControlCompletedEventHandler closeControlCompleted;
        
        /// <remarks/>
        public event getCurrentControlCompletedEventHandler getCurrentControlCompleted;
        
        /// <remarks/>
        public event getSuggestedCloseDayCompletedEventHandler getSuggestedCloseDayCompleted;
        
        /// <remarks/>
        public event getSuggestedOpenDayCompletedEventHandler getSuggestedOpenDayCompleted;
        
        /// <remarks/>
        public event openControlCompletedEventHandler openControlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkControlResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public checkControlResponse checkControl([System.Xml.Serialization.XmlElementAttribute("checkControl", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] checkControl checkControl1) {
            object[] results = this.Invoke("checkControl", new object[] {
                        checkControl1});
            return ((checkControlResponse)(results[0]));
        }
        
        /// <remarks/>
        public void checkControlAsync(checkControl checkControl1) {
            this.checkControlAsync(checkControl1, null);
        }
        
        /// <remarks/>
        public void checkControlAsync(checkControl checkControl1, object userState) {
            if ((this.checkControlOperationCompleted == null)) {
                this.checkControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckControlOperationCompleted);
            }
            this.InvokeAsync("checkControl", new object[] {
                        checkControl1}, this.checkControlOperationCompleted, userState);
        }
        
        private void OncheckControlOperationCompleted(object arg) {
            if ((this.checkControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkControlCompleted(this, new checkControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("closeControlResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public closeControlResponse closeControl([System.Xml.Serialization.XmlElementAttribute("closeControl", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] closeControl closeControl1) {
            object[] results = this.Invoke("closeControl", new object[] {
                        closeControl1});
            return ((closeControlResponse)(results[0]));
        }
        
        /// <remarks/>
        public void closeControlAsync(closeControl closeControl1) {
            this.closeControlAsync(closeControl1, null);
        }
        
        /// <remarks/>
        public void closeControlAsync(closeControl closeControl1, object userState) {
            if ((this.closeControlOperationCompleted == null)) {
                this.closeControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseControlOperationCompleted);
            }
            this.InvokeAsync("closeControl", new object[] {
                        closeControl1}, this.closeControlOperationCompleted, userState);
        }
        
        private void OncloseControlOperationCompleted(object arg) {
            if ((this.closeControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeControlCompleted(this, new closeControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCurrentControlResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public getCurrentControlResponse getCurrentControl([System.Xml.Serialization.XmlElementAttribute("getCurrentControl", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] getCurrentControl getCurrentControl1) {
            object[] results = this.Invoke("getCurrentControl", new object[] {
                        getCurrentControl1});
            return ((getCurrentControlResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentControlAsync(getCurrentControl getCurrentControl1) {
            this.getCurrentControlAsync(getCurrentControl1, null);
        }
        
        /// <remarks/>
        public void getCurrentControlAsync(getCurrentControl getCurrentControl1, object userState) {
            if ((this.getCurrentControlOperationCompleted == null)) {
                this.getCurrentControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentControlOperationCompleted);
            }
            this.InvokeAsync("getCurrentControl", new object[] {
                        getCurrentControl1}, this.getCurrentControlOperationCompleted, userState);
        }
        
        private void OngetCurrentControlOperationCompleted(object arg) {
            if ((this.getCurrentControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentControlCompleted(this, new getCurrentControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getSuggestedCloseDayResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public getSuggestedCloseDayResponse getSuggestedCloseDay([System.Xml.Serialization.XmlElementAttribute("getSuggestedCloseDay", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] getSuggestedCloseDay getSuggestedCloseDay1) {
            object[] results = this.Invoke("getSuggestedCloseDay", new object[] {
                        getSuggestedCloseDay1});
            return ((getSuggestedCloseDayResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getSuggestedCloseDayAsync(getSuggestedCloseDay getSuggestedCloseDay1) {
            this.getSuggestedCloseDayAsync(getSuggestedCloseDay1, null);
        }
        
        /// <remarks/>
        public void getSuggestedCloseDayAsync(getSuggestedCloseDay getSuggestedCloseDay1, object userState) {
            if ((this.getSuggestedCloseDayOperationCompleted == null)) {
                this.getSuggestedCloseDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSuggestedCloseDayOperationCompleted);
            }
            this.InvokeAsync("getSuggestedCloseDay", new object[] {
                        getSuggestedCloseDay1}, this.getSuggestedCloseDayOperationCompleted, userState);
        }
        
        private void OngetSuggestedCloseDayOperationCompleted(object arg) {
            if ((this.getSuggestedCloseDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSuggestedCloseDayCompleted(this, new getSuggestedCloseDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getSuggestedOpenDayResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public getSuggestedOpenDayResponse getSuggestedOpenDay([System.Xml.Serialization.XmlElementAttribute("getSuggestedOpenDay", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] getSuggestedOpenDay getSuggestedOpenDay1) {
            object[] results = this.Invoke("getSuggestedOpenDay", new object[] {
                        getSuggestedOpenDay1});
            return ((getSuggestedOpenDayResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getSuggestedOpenDayAsync(getSuggestedOpenDay getSuggestedOpenDay1) {
            this.getSuggestedOpenDayAsync(getSuggestedOpenDay1, null);
        }
        
        /// <remarks/>
        public void getSuggestedOpenDayAsync(getSuggestedOpenDay getSuggestedOpenDay1, object userState) {
            if ((this.getSuggestedOpenDayOperationCompleted == null)) {
                this.getSuggestedOpenDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSuggestedOpenDayOperationCompleted);
            }
            this.InvokeAsync("getSuggestedOpenDay", new object[] {
                        getSuggestedOpenDay1}, this.getSuggestedOpenDayOperationCompleted, userState);
        }
        
        private void OngetSuggestedOpenDayOperationCompleted(object arg) {
            if ((this.getSuggestedOpenDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSuggestedOpenDayCompleted(this, new getSuggestedOpenDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("openControlResponse", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
        public openControlResponse openControl([System.Xml.Serialization.XmlElementAttribute("openControl", Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")] openControl openControl1) {
            object[] results = this.Invoke("openControl", new object[] {
                        openControl1});
            return ((openControlResponse)(results[0]));
        }
        
        /// <remarks/>
        public void openControlAsync(openControl openControl1) {
            this.openControlAsync(openControl1, null);
        }
        
        /// <remarks/>
        public void openControlAsync(openControl openControl1, object userState) {
            if ((this.openControlOperationCompleted == null)) {
                this.openControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenControlOperationCompleted);
            }
            this.InvokeAsync("openControl", new object[] {
                        openControl1}, this.openControlOperationCompleted, userState);
        }
        
        private void OnopenControlOperationCompleted(object arg) {
            if ((this.openControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openControlCompleted(this, new openControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class checkControl {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class openControlResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class openControl {
        
        private long usrIdField;
        
        private bool usrIdFieldSpecified;
        
        private long stationIdField;
        
        private bool stationIdFieldSpecified;
        
        private System.DateTime controlDateField;
        
        private bool controlDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long usrId {
            get {
                return this.usrIdField;
            }
            set {
                this.usrIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usrIdSpecified {
            get {
                return this.usrIdFieldSpecified;
            }
            set {
                this.usrIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stationIdSpecified {
            get {
                return this.stationIdFieldSpecified;
            }
            set {
                this.stationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime controlDate {
            get {
                return this.controlDateField;
            }
            set {
                this.controlDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlDateSpecified {
            get {
                return this.controlDateFieldSpecified;
            }
            set {
                this.controlDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getSuggestedOpenDayResponse {
        
        private System.DateTime returnField;
        
        private bool returnFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnSpecified {
            get {
                return this.returnFieldSpecified;
            }
            set {
                this.returnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getSuggestedOpenDay {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getSuggestedCloseDayResponse {
        
        private System.DateTime returnField;
        
        private bool returnFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnSpecified {
            get {
                return this.returnFieldSpecified;
            }
            set {
                this.returnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getSuggestedCloseDay {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getCurrentControlResponse {
        
        private System.DateTime returnField;
        
        private bool returnFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnSpecified {
            get {
                return this.returnFieldSpecified;
            }
            set {
                this.returnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class getCurrentControl {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class closeControlResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class closeControl {
        
        private long usrIdField;
        
        private bool usrIdFieldSpecified;
        
        private long stationIdField;
        
        private bool stationIdFieldSpecified;
        
        private System.DateTime controlDateField;
        
        private bool controlDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long usrId {
            get {
                return this.usrIdField;
            }
            set {
                this.usrIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usrIdSpecified {
            get {
                return this.usrIdFieldSpecified;
            }
            set {
                this.usrIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stationIdSpecified {
            get {
                return this.stationIdFieldSpecified;
            }
            set {
                this.stationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime controlDate {
            get {
                return this.controlDateField;
            }
            set {
                this.controlDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlDateSpecified {
            get {
                return this.controlDateFieldSpecified;
            }
            set {
                this.controlDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.service.ws.mdi.flexdoc.com.br/")]
    public partial class checkControlResponse {
        
        private bool returnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void checkControlCompletedEventHandler(object sender, checkControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkControlResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkControlResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void closeControlCompletedEventHandler(object sender, closeControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public closeControlResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((closeControlResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getCurrentControlCompletedEventHandler(object sender, getCurrentControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getCurrentControlResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getCurrentControlResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSuggestedCloseDayCompletedEventHandler(object sender, getSuggestedCloseDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSuggestedCloseDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSuggestedCloseDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getSuggestedCloseDayResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getSuggestedCloseDayResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSuggestedOpenDayCompletedEventHandler(object sender, getSuggestedOpenDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSuggestedOpenDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSuggestedOpenDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getSuggestedOpenDayResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getSuggestedOpenDayResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void openControlCompletedEventHandler(object sender, openControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class openControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal openControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public openControlResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((openControlResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591