//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FlexImage.WebService.MonitoringWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MonitoringServiceSoapBinding", Namespace="http://impl.service.flexps.flexdoc.com.br/")]
    public partial class MonitoringService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAnalyticWorkflowMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSyntheticWorkflowMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAnalyticWorkflowFinOperationCompleted;
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MonitoringService() {
            this.Url = global::FlexImage.WebService.Properties.Settings.Default.FlexImage_WSMonitoring_MonitoringWebReference_MonitoringService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAnalyticWorkflowMonitoringCompletedEventHandler getAnalyticWorkflowMonitoringCompleted;
        
        /// <remarks/>
        public event getSyntheticWorkflowMonitoringCompletedEventHandler getSyntheticWorkflowMonitoringCompleted;
        
        /// <remarks/>
        public event getAnalyticWorkflowFinCompletedEventHandler getAnalyticWorkflowFinCompleted;
        
        /// <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public analyticMonitorDto[] getAnalyticWorkflowMonitoring([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long siteId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool siteIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified) {
            object[] results = this.Invoke("getAnalyticWorkflowMonitoring", new object[] {
                        token,
                        workflowId,
                        workflowIdSpecified,
                        siteId,
                        siteIdSpecified,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified});
            return ((analyticMonitorDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getAnalyticWorkflowMonitoringAsync(string token, long workflowId, bool workflowIdSpecified, long siteId, bool siteIdSpecified, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified) {
            this.getAnalyticWorkflowMonitoringAsync(token, workflowId, workflowIdSpecified, siteId, siteIdSpecified, usrId, usrIdSpecified, stationId, stationIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAnalyticWorkflowMonitoringAsync(string token, long workflowId, bool workflowIdSpecified, long siteId, bool siteIdSpecified, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, object userState) {
            if ((this.getAnalyticWorkflowMonitoringOperationCompleted == null)) {
                this.getAnalyticWorkflowMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAnalyticWorkflowMonitoringOperationCompleted);
            }
            this.InvokeAsync("getAnalyticWorkflowMonitoring", new object[] {
                        token,
                        workflowId,
                        workflowIdSpecified,
                        siteId,
                        siteIdSpecified,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified}, this.getAnalyticWorkflowMonitoringOperationCompleted, userState);
        }
        
        private void OngetAnalyticWorkflowMonitoringOperationCompleted(object arg) {
            if ((this.getAnalyticWorkflowMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAnalyticWorkflowMonitoringCompleted(this, new getAnalyticWorkflowMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public syntheticMonitorDto getSyntheticWorkflowMonitoring([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified) {
            object[] results = this.Invoke("getSyntheticWorkflowMonitoring", new object[] {
                        token,
                        workflowId,
                        workflowIdSpecified,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified});
            return ((syntheticMonitorDto)(results[0]));
        }
        
        /// <remarks/>
        public void getSyntheticWorkflowMonitoringAsync(string token, long workflowId, bool workflowIdSpecified, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified) {
            this.getSyntheticWorkflowMonitoringAsync(token, workflowId, workflowIdSpecified, usrId, usrIdSpecified, stationId, stationIdSpecified, null);
        }
        
        /// <remarks/>
        public void getSyntheticWorkflowMonitoringAsync(string token, long workflowId, bool workflowIdSpecified, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, object userState) {
            if ((this.getSyntheticWorkflowMonitoringOperationCompleted == null)) {
                this.getSyntheticWorkflowMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSyntheticWorkflowMonitoringOperationCompleted);
            }
            this.InvokeAsync("getSyntheticWorkflowMonitoring", new object[] {
                        token,
                        workflowId,
                        workflowIdSpecified,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified}, this.getSyntheticWorkflowMonitoringOperationCompleted, userState);
        }
        
        private void OngetSyntheticWorkflowMonitoringOperationCompleted(object arg) {
            if ((this.getSyntheticWorkflowMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSyntheticWorkflowMonitoringCompleted(this, new getSyntheticWorkflowMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public analyticWorkflowDto[] getAnalyticWorkflowFin([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long siteId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool siteIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isFinished) {
            object[] results = this.Invoke("getAnalyticWorkflowFin", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        isFinished});
            return ((analyticWorkflowDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getAnalyticWorkflowFinAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, bool isFinished) {
            this.getAnalyticWorkflowFinAsync(token, usrId, usrIdSpecified, siteId, siteIdSpecified, isFinished, null);
        }
        
        /// <remarks/>
        public void getAnalyticWorkflowFinAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, bool isFinished, object userState) {
            if ((this.getAnalyticWorkflowFinOperationCompleted == null)) {
                this.getAnalyticWorkflowFinOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAnalyticWorkflowFinOperationCompleted);
            }
            this.InvokeAsync("getAnalyticWorkflowFin", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        isFinished}, this.getAnalyticWorkflowFinOperationCompleted, userState);
        }
        
        private void OngetAnalyticWorkflowFinOperationCompleted(object arg) {
            if ((this.getAnalyticWorkflowFinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAnalyticWorkflowFinCompleted(this, new getAnalyticWorkflowFinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ping() {
            object[] results = this.Invoke("ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void pingAsync() {
            this.pingAsync(null);
        }
        
        /// <remarks/>
        public void pingAsync(object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[0], this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new pingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class analyticMonitorDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private System.DateTime batchLastActionField;
        
        private bool batchLastActionFieldSpecified;
        
        private System.DateTime batchStartField;
        
        private bool batchStartFieldSpecified;
        
        private int batchTotalDocsField;
        
        private bool batchTotalDocsFieldSpecified;
        
        private double percentField;
        
        private bool percentFieldSpecified;
        
        private string phaseNameField;
        
        private string siteInternalNumberField;
        
        private string statusField;
        
        private long transIdField;
        
        private bool transIdFieldSpecified;
        
        private int transStatusField;
        
        private bool transStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime batchLastAction {
            get {
                return this.batchLastActionField;
            }
            set {
                this.batchLastActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchLastActionSpecified {
            get {
                return this.batchLastActionFieldSpecified;
            }
            set {
                this.batchLastActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime batchStart {
            get {
                return this.batchStartField;
            }
            set {
                this.batchStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchStartSpecified {
            get {
                return this.batchStartFieldSpecified;
            }
            set {
                this.batchStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchTotalDocs {
            get {
                return this.batchTotalDocsField;
            }
            set {
                this.batchTotalDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchTotalDocsSpecified {
            get {
                return this.batchTotalDocsFieldSpecified;
            }
            set {
                this.batchTotalDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double percent {
            get {
                return this.percentField;
            }
            set {
                this.percentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool percentSpecified {
            get {
                return this.percentFieldSpecified;
            }
            set {
                this.percentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteInternalNumber {
            get {
                return this.siteInternalNumberField;
            }
            set {
                this.siteInternalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long transId {
            get {
                return this.transIdField;
            }
            set {
                this.transIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transIdSpecified {
            get {
                return this.transIdFieldSpecified;
            }
            set {
                this.transIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int transStatus {
            get {
                return this.transStatusField;
            }
            set {
                this.transStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transStatusSpecified {
            get {
                return this.transStatusFieldSpecified;
            }
            set {
                this.transStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class analyticWorkflowDto {
        
        private int batchStatusField;
        
        private bool batchStatusFieldSpecified;
        
        private bool blockCloseSiteField;
        
        private string phaseNameField;
        
        private string siteInternalNumberField;
        
        private long totalField;
        
        private bool totalFieldSpecified;
        
        private int transStatusField;
        
        private bool transStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchStatus {
            get {
                return this.batchStatusField;
            }
            set {
                this.batchStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchStatusSpecified {
            get {
                return this.batchStatusFieldSpecified;
            }
            set {
                this.batchStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockCloseSite {
            get {
                return this.blockCloseSiteField;
            }
            set {
                this.blockCloseSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteInternalNumber {
            get {
                return this.siteInternalNumberField;
            }
            set {
                this.siteInternalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int transStatus {
            get {
                return this.transStatusField;
            }
            set {
                this.transStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transStatusSpecified {
            get {
                return this.transStatusFieldSpecified;
            }
            set {
                this.transStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class phaseMonitorDto {
        
        private System.DateTime oldestBatchField;
        
        private bool oldestBatchFieldSpecified;
        
        private int phaseBatchStatusField;
        
        private bool phaseBatchStatusFieldSpecified;
        
        private long phaseIdField;
        
        private bool phaseIdFieldSpecified;
        
        private string phaseNameField;
        
        private int phaseOrderField;
        
        private bool phaseOrderFieldSpecified;
        
        private long remainDocsField;
        
        private bool remainDocsFieldSpecified;
        
        private long totalDocsField;
        
        private bool totalDocsFieldSpecified;
        
        private float totalDocsPercentField;
        
        private bool totalDocsPercentFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime oldestBatch {
            get {
                return this.oldestBatchField;
            }
            set {
                this.oldestBatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oldestBatchSpecified {
            get {
                return this.oldestBatchFieldSpecified;
            }
            set {
                this.oldestBatchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int phaseBatchStatus {
            get {
                return this.phaseBatchStatusField;
            }
            set {
                this.phaseBatchStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseBatchStatusSpecified {
            get {
                return this.phaseBatchStatusFieldSpecified;
            }
            set {
                this.phaseBatchStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long phaseId {
            get {
                return this.phaseIdField;
            }
            set {
                this.phaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseIdSpecified {
            get {
                return this.phaseIdFieldSpecified;
            }
            set {
                this.phaseIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int phaseOrder {
            get {
                return this.phaseOrderField;
            }
            set {
                this.phaseOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseOrderSpecified {
            get {
                return this.phaseOrderFieldSpecified;
            }
            set {
                this.phaseOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long remainDocs {
            get {
                return this.remainDocsField;
            }
            set {
                this.remainDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remainDocsSpecified {
            get {
                return this.remainDocsFieldSpecified;
            }
            set {
                this.remainDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long totalDocs {
            get {
                return this.totalDocsField;
            }
            set {
                this.totalDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalDocsSpecified {
            get {
                return this.totalDocsFieldSpecified;
            }
            set {
                this.totalDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float totalDocsPercent {
            get {
                return this.totalDocsPercentField;
            }
            set {
                this.totalDocsPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalDocsPercentSpecified {
            get {
                return this.totalDocsPercentFieldSpecified;
            }
            set {
                this.totalDocsPercentFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class syntheticMonitorDto {
        
        private phaseMonitorDto[] phasesField;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        private string workflowNameField;
        
        private long workflowTotalDocsField;
        
        private bool workflowTotalDocsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phases", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public phaseMonitorDto[] phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowName {
            get {
                return this.workflowNameField;
            }
            set {
                this.workflowNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowTotalDocs {
            get {
                return this.workflowTotalDocsField;
            }
            set {
                this.workflowTotalDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowTotalDocsSpecified {
            get {
                return this.workflowTotalDocsFieldSpecified;
            }
            set {
                this.workflowTotalDocsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getAnalyticWorkflowMonitoringCompletedEventHandler(object sender, getAnalyticWorkflowMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAnalyticWorkflowMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAnalyticWorkflowMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public analyticMonitorDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((analyticMonitorDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getSyntheticWorkflowMonitoringCompletedEventHandler(object sender, getSyntheticWorkflowMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSyntheticWorkflowMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSyntheticWorkflowMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public syntheticMonitorDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((syntheticMonitorDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getAnalyticWorkflowFinCompletedEventHandler(object sender, getAnalyticWorkflowFinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAnalyticWorkflowFinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAnalyticWorkflowFinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public analyticWorkflowDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((analyticWorkflowDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void pingCompletedEventHandler(object sender, pingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591