//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FlexImage.WebService.BasicTableWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicTableServiceSoapBinding", Namespace="http://impl.service.flexps.flexdoc.com.br/")]
    public partial class BasicTableService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSiteByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypesByWorkflowIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback createParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHwScanOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrganizationLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMediaTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowByAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClearingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueuesByUsrGroupsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypeByAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback isValidBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback setParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowByUsrGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOcrTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParamByAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReasonsByReasonGroupAliasOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicTableService() {
            this.Url = global::FlexImage.WebService.Properties.Settings.Default.FlexImage_WSBasicTable_BasicTableWebReference_BasicTableService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getSiteByIdCompletedEventHandler getSiteByIdCompleted;
        
        /// <remarks/>
        public event getPermissionsCompletedEventHandler getPermissionsCompleted;
        
        /// <remarks/>
        public event getTypesByWorkflowIdCompletedEventHandler getTypesByWorkflowIdCompleted;
        
        /// <remarks/>
        public event createParamCompletedEventHandler createParamCompleted;
        
        /// <remarks/>
        public event getHwScanCompletedEventHandler getHwScanCompleted;
        
        /// <remarks/>
        public event getCheckListCompletedEventHandler getCheckListCompleted;
        
        /// <remarks/>
        public event getOrganizationLogoCompletedEventHandler getOrganizationLogoCompleted;
        
        /// <remarks/>
        public event getAllParamCompletedEventHandler getAllParamCompleted;
        
        /// <remarks/>
        public event getWorkflowByIdCompletedEventHandler getWorkflowByIdCompleted;
        
        /// <remarks/>
        public event getMediaTypeCompletedEventHandler getMediaTypeCompleted;
        
        /// <remarks/>
        public event getWorkflowByAliasCompletedEventHandler getWorkflowByAliasCompleted;
        
        /// <remarks/>
        public event getClearingListCompletedEventHandler getClearingListCompleted;
        
        /// <remarks/>
        public event getAllTypesCompletedEventHandler getAllTypesCompleted;
        
        /// <remarks/>
        public event getQueuesByUsrGroupsIdCompletedEventHandler getQueuesByUsrGroupsIdCompleted;
        
        /// <remarks/>
        public event getTypeByAliasCompletedEventHandler getTypeByAliasCompleted;
        
        /// <remarks/>
        public event isValidBranchCompletedEventHandler isValidBranchCompleted;
        
        /// <remarks/>
        public event setParamCompletedEventHandler setParamCompleted;
        
        /// <remarks/>
        public event getWorkflowByUsrGroupsCompletedEventHandler getWorkflowByUsrGroupsCompleted;
        
        /// <remarks/>
        public event getTypeByIdCompletedEventHandler getTypeByIdCompleted;
        
        /// <remarks/>
        public event getBankListCompletedEventHandler getBankListCompleted;
        
        /// <remarks/>
        public event getOcrTemplateListCompletedEventHandler getOcrTemplateListCompleted;
        
        /// <remarks/>
        public event getParamByAliasCompletedEventHandler getParamByAliasCompleted;
        
        /// <remarks/>
        public event getStationIdByNameCompletedEventHandler getStationIdByNameCompleted;
        
        /// <remarks/>
        public event getReasonsByReasonGroupAliasCompletedEventHandler getReasonsByReasonGroupAliasCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public siteDto getSiteById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long siteId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool siteIdSpecified) {
            object[] results = this.Invoke("getSiteById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified});
            return ((siteDto)(results[0]));
        }
        
        /// <remarks/>
        public void getSiteByIdAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified) {
            this.getSiteByIdAsync(token, usrId, usrIdSpecified, siteId, siteIdSpecified, null);
        }
        
        /// <remarks/>
        public void getSiteByIdAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, object userState) {
            if ((this.getSiteByIdOperationCompleted == null)) {
                this.getSiteByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSiteByIdOperationCompleted);
            }
            this.InvokeAsync("getSiteById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified}, this.getSiteByIdOperationCompleted, userState);
        }
        
        private void OngetSiteByIdOperationCompleted(object arg) {
            if ((this.getSiteByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSiteByIdCompleted(this, new getSiteByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public permissionDto[] getPermissions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute("usrGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long[] usrGroupIds) {
            object[] results = this.Invoke("getPermissions", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds});
            return ((permissionDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getPermissionsAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds) {
            this.getPermissionsAsync(token, usrId, usrIdSpecified, usrGroupIds, null);
        }
        
        /// <remarks/>
        public void getPermissionsAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds, object userState) {
            if ((this.getPermissionsOperationCompleted == null)) {
                this.getPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPermissionsOperationCompleted);
            }
            this.InvokeAsync("getPermissions", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds}, this.getPermissionsOperationCompleted, userState);
        }
        
        private void OngetPermissionsOperationCompleted(object arg) {
            if ((this.getPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPermissionsCompleted(this, new getPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public typeDto[] getTypesByWorkflowId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified) {
            object[] results = this.Invoke("getTypesByWorkflowId", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified});
            return ((typeDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getTypesByWorkflowIdAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified) {
            this.getTypesByWorkflowIdAsync(token, usrId, usrIdSpecified, workflowId, workflowIdSpecified, null);
        }
        
        /// <remarks/>
        public void getTypesByWorkflowIdAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified, object userState) {
            if ((this.getTypesByWorkflowIdOperationCompleted == null)) {
                this.getTypesByWorkflowIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypesByWorkflowIdOperationCompleted);
            }
            this.InvokeAsync("getTypesByWorkflowId", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified}, this.getTypesByWorkflowIdOperationCompleted, userState);
        }
        
        private void OngetTypesByWorkflowIdOperationCompleted(object arg) {
            if ((this.getTypesByWorkflowIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypesByWorkflowIdCompleted(this, new getTypesByWorkflowIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createParam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramGroupAlias, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramGroupName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramAlias, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int paramLogin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool paramLoginSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramValue, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified) {
            this.Invoke("createParam", new object[] {
                        token,
                        paramGroupAlias,
                        paramGroupName,
                        paramAlias,
                        paramDesc,
                        paramLogin,
                        paramLoginSpecified,
                        paramValue,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified});
        }
        
        /// <remarks/>
        public void createParamAsync(string token, string paramGroupAlias, string paramGroupName, string paramAlias, string paramDesc, int paramLogin, bool paramLoginSpecified, string paramValue, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified) {
            this.createParamAsync(token, paramGroupAlias, paramGroupName, paramAlias, paramDesc, paramLogin, paramLoginSpecified, paramValue, usrId, usrIdSpecified, stationId, stationIdSpecified, null);
        }
        
        /// <remarks/>
        public void createParamAsync(string token, string paramGroupAlias, string paramGroupName, string paramAlias, string paramDesc, int paramLogin, bool paramLoginSpecified, string paramValue, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, object userState) {
            if ((this.createParamOperationCompleted == null)) {
                this.createParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateParamOperationCompleted);
            }
            this.InvokeAsync("createParam", new object[] {
                        token,
                        paramGroupAlias,
                        paramGroupName,
                        paramAlias,
                        paramDesc,
                        paramLogin,
                        paramLoginSpecified,
                        paramValue,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified}, this.createParamOperationCompleted, userState);
        }
        
        private void OncreateParamOperationCompleted(object arg) {
            if ((this.createParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createParamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hwScanDto getHwScan([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long hwScanId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool hwScanIdSpecified) {
            object[] results = this.Invoke("getHwScan", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        hwScanId,
                        hwScanIdSpecified});
            return ((hwScanDto)(results[0]));
        }
        
        /// <remarks/>
        public void getHwScanAsync(string token, long usrId, bool usrIdSpecified, long hwScanId, bool hwScanIdSpecified) {
            this.getHwScanAsync(token, usrId, usrIdSpecified, hwScanId, hwScanIdSpecified, null);
        }
        
        /// <remarks/>
        public void getHwScanAsync(string token, long usrId, bool usrIdSpecified, long hwScanId, bool hwScanIdSpecified, object userState) {
            if ((this.getHwScanOperationCompleted == null)) {
                this.getHwScanOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHwScanOperationCompleted);
            }
            this.InvokeAsync("getHwScan", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        hwScanId,
                        hwScanIdSpecified}, this.getHwScanOperationCompleted, userState);
        }
        
        private void OngetHwScanOperationCompleted(object arg) {
            if ((this.getHwScanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHwScanCompleted(this, new getHwScanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public checkListDto[] getCheckList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified) {
            object[] results = this.Invoke("getCheckList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified});
            return ((checkListDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getCheckListAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified) {
            this.getCheckListAsync(token, usrId, usrIdSpecified, workflowId, workflowIdSpecified, null);
        }
        
        /// <remarks/>
        public void getCheckListAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified, object userState) {
            if ((this.getCheckListOperationCompleted == null)) {
                this.getCheckListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckListOperationCompleted);
            }
            this.InvokeAsync("getCheckList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified}, this.getCheckListOperationCompleted, userState);
        }
        
        private void OngetCheckListOperationCompleted(object arg) {
            if ((this.getCheckListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckListCompleted(this, new getCheckListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] getOrganizationLogo() {
            object[] results = this.Invoke("getOrganizationLogo", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getOrganizationLogoAsync() {
            this.getOrganizationLogoAsync(null);
        }
        
        /// <remarks/>
        public void getOrganizationLogoAsync(object userState) {
            if ((this.getOrganizationLogoOperationCompleted == null)) {
                this.getOrganizationLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrganizationLogoOperationCompleted);
            }
            this.InvokeAsync("getOrganizationLogo", new object[0], this.getOrganizationLogoOperationCompleted, userState);
        }
        
        private void OngetOrganizationLogoOperationCompleted(object arg) {
            if ((this.getOrganizationLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrganizationLogoCompleted(this, new getOrganizationLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public paramDto[] getAllParam() {
            object[] results = this.Invoke("getAllParam", new object[0]);
            return ((paramDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllParamAsync() {
            this.getAllParamAsync(null);
        }
        
        /// <remarks/>
        public void getAllParamAsync(object userState) {
            if ((this.getAllParamOperationCompleted == null)) {
                this.getAllParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllParamOperationCompleted);
            }
            this.InvokeAsync("getAllParam", new object[0], this.getAllParamOperationCompleted, userState);
        }
        
        private void OngetAllParamOperationCompleted(object arg) {
            if ((this.getAllParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllParamCompleted(this, new getAllParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public workflowDto getWorkflowById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified) {
            object[] results = this.Invoke("getWorkflowById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified});
            return ((workflowDto)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowByIdAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified) {
            this.getWorkflowByIdAsync(token, usrId, usrIdSpecified, workflowId, workflowIdSpecified, null);
        }
        
        /// <remarks/>
        public void getWorkflowByIdAsync(string token, long usrId, bool usrIdSpecified, long workflowId, bool workflowIdSpecified, object userState) {
            if ((this.getWorkflowByIdOperationCompleted == null)) {
                this.getWorkflowByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowByIdOperationCompleted);
            }
            this.InvokeAsync("getWorkflowById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        workflowId,
                        workflowIdSpecified}, this.getWorkflowByIdOperationCompleted, userState);
        }
        
        private void OngetWorkflowByIdOperationCompleted(object arg) {
            if ((this.getWorkflowByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowByIdCompleted(this, new getWorkflowByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mediaTypeDto[] getMediaType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getMediaType", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((mediaTypeDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getMediaTypeAsync(string token, long usrId, bool usrIdSpecified) {
            this.getMediaTypeAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getMediaTypeAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getMediaTypeOperationCompleted == null)) {
                this.getMediaTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMediaTypeOperationCompleted);
            }
            this.InvokeAsync("getMediaType", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getMediaTypeOperationCompleted, userState);
        }
        
        private void OngetMediaTypeOperationCompleted(object arg) {
            if ((this.getMediaTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMediaTypeCompleted(this, new getMediaTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public workflowDto getWorkflowByAlias([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string alias) {
            object[] results = this.Invoke("getWorkflowByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        alias});
            return ((workflowDto)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowByAliasAsync(string token, long usrId, bool usrIdSpecified, string alias) {
            this.getWorkflowByAliasAsync(token, usrId, usrIdSpecified, alias, null);
        }
        
        /// <remarks/>
        public void getWorkflowByAliasAsync(string token, long usrId, bool usrIdSpecified, string alias, object userState) {
            if ((this.getWorkflowByAliasOperationCompleted == null)) {
                this.getWorkflowByAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowByAliasOperationCompleted);
            }
            this.InvokeAsync("getWorkflowByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        alias}, this.getWorkflowByAliasOperationCompleted, userState);
        }
        
        private void OngetWorkflowByAliasOperationCompleted(object arg) {
            if ((this.getWorkflowByAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowByAliasCompleted(this, new getWorkflowByAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clearingDto[] getClearingList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getClearingList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((clearingDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getClearingListAsync(string token, long usrId, bool usrIdSpecified) {
            this.getClearingListAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getClearingListAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getClearingListOperationCompleted == null)) {
                this.getClearingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClearingListOperationCompleted);
            }
            this.InvokeAsync("getClearingList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getClearingListOperationCompleted, userState);
        }
        
        private void OngetClearingListOperationCompleted(object arg) {
            if ((this.getClearingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClearingListCompleted(this, new getClearingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public typeDto[] getAllTypes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getAllTypes", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((typeDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllTypesAsync(string token, long usrId, bool usrIdSpecified) {
            this.getAllTypesAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllTypesAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getAllTypesOperationCompleted == null)) {
                this.getAllTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTypesOperationCompleted);
            }
            this.InvokeAsync("getAllTypes", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getAllTypesOperationCompleted, userState);
        }
        
        private void OngetAllTypesOperationCompleted(object arg) {
            if ((this.getAllTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTypesCompleted(this, new getAllTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public queueDto[] getQueuesByUsrGroupsId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute("usrGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long[] usrGroupIds) {
            object[] results = this.Invoke("getQueuesByUsrGroupsId", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds});
            return ((queueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getQueuesByUsrGroupsIdAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds) {
            this.getQueuesByUsrGroupsIdAsync(token, usrId, usrIdSpecified, usrGroupIds, null);
        }
        
        /// <remarks/>
        public void getQueuesByUsrGroupsIdAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds, object userState) {
            if ((this.getQueuesByUsrGroupsIdOperationCompleted == null)) {
                this.getQueuesByUsrGroupsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueuesByUsrGroupsIdOperationCompleted);
            }
            this.InvokeAsync("getQueuesByUsrGroupsId", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds}, this.getQueuesByUsrGroupsIdOperationCompleted, userState);
        }
        
        private void OngetQueuesByUsrGroupsIdOperationCompleted(object arg) {
            if ((this.getQueuesByUsrGroupsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueuesByUsrGroupsIdCompleted(this, new getQueuesByUsrGroupsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public typeDto getTypeByAlias([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string typeAlias) {
            object[] results = this.Invoke("getTypeByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        typeAlias});
            return ((typeDto)(results[0]));
        }
        
        /// <remarks/>
        public void getTypeByAliasAsync(string token, long usrId, bool usrIdSpecified, string typeAlias) {
            this.getTypeByAliasAsync(token, usrId, usrIdSpecified, typeAlias, null);
        }
        
        /// <remarks/>
        public void getTypeByAliasAsync(string token, long usrId, bool usrIdSpecified, string typeAlias, object userState) {
            if ((this.getTypeByAliasOperationCompleted == null)) {
                this.getTypeByAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypeByAliasOperationCompleted);
            }
            this.InvokeAsync("getTypeByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        typeAlias}, this.getTypeByAliasOperationCompleted, userState);
        }
        
        private void OngetTypeByAliasOperationCompleted(object arg) {
            if ((this.getTypeByAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypeByAliasCompleted(this, new getTypeByAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isValidBranch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long bankId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool bankIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long branchId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool branchIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long clearingId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool clearingIdSpecified) {
            object[] results = this.Invoke("isValidBranch", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        bankId,
                        bankIdSpecified,
                        branchId,
                        branchIdSpecified,
                        clearingId,
                        clearingIdSpecified});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isValidBranchAsync(string token, long usrId, bool usrIdSpecified, long bankId, bool bankIdSpecified, long branchId, bool branchIdSpecified, long clearingId, bool clearingIdSpecified) {
            this.isValidBranchAsync(token, usrId, usrIdSpecified, bankId, bankIdSpecified, branchId, branchIdSpecified, clearingId, clearingIdSpecified, null);
        }
        
        /// <remarks/>
        public void isValidBranchAsync(string token, long usrId, bool usrIdSpecified, long bankId, bool bankIdSpecified, long branchId, bool branchIdSpecified, long clearingId, bool clearingIdSpecified, object userState) {
            if ((this.isValidBranchOperationCompleted == null)) {
                this.isValidBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidBranchOperationCompleted);
            }
            this.InvokeAsync("isValidBranch", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        bankId,
                        bankIdSpecified,
                        branchId,
                        branchIdSpecified,
                        clearingId,
                        clearingIdSpecified}, this.isValidBranchOperationCompleted, userState);
        }
        
        private void OnisValidBranchOperationCompleted(object arg) {
            if ((this.isValidBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidBranchCompleted(this, new isValidBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setParam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramAlias, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string value, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified) {
            this.Invoke("setParam", new object[] {
                        token,
                        paramAlias,
                        value,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified});
        }
        
        /// <remarks/>
        public void setParamAsync(string token, string paramAlias, string value, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified) {
            this.setParamAsync(token, paramAlias, value, usrId, usrIdSpecified, stationId, stationIdSpecified, null);
        }
        
        /// <remarks/>
        public void setParamAsync(string token, string paramAlias, string value, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, object userState) {
            if ((this.setParamOperationCompleted == null)) {
                this.setParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetParamOperationCompleted);
            }
            this.InvokeAsync("setParam", new object[] {
                        token,
                        paramAlias,
                        value,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified}, this.setParamOperationCompleted, userState);
        }
        
        private void OnsetParamOperationCompleted(object arg) {
            if ((this.setParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setParamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public workflowDto[] getWorkflowByUsrGroups([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute("usrGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long[] usrGroupIds) {
            object[] results = this.Invoke("getWorkflowByUsrGroups", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds});
            return ((workflowDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowByUsrGroupsAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds) {
            this.getWorkflowByUsrGroupsAsync(token, usrId, usrIdSpecified, usrGroupIds, null);
        }
        
        /// <remarks/>
        public void getWorkflowByUsrGroupsAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds, object userState) {
            if ((this.getWorkflowByUsrGroupsOperationCompleted == null)) {
                this.getWorkflowByUsrGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowByUsrGroupsOperationCompleted);
            }
            this.InvokeAsync("getWorkflowByUsrGroups", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds}, this.getWorkflowByUsrGroupsOperationCompleted, userState);
        }
        
        private void OngetWorkflowByUsrGroupsOperationCompleted(object arg) {
            if ((this.getWorkflowByUsrGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowByUsrGroupsCompleted(this, new getWorkflowByUsrGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public typeDto getTypeById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long typeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeIdSpecified) {
            object[] results = this.Invoke("getTypeById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        typeId,
                        typeIdSpecified});
            return ((typeDto)(results[0]));
        }
        
        /// <remarks/>
        public void getTypeByIdAsync(string token, long usrId, bool usrIdSpecified, long typeId, bool typeIdSpecified) {
            this.getTypeByIdAsync(token, usrId, usrIdSpecified, typeId, typeIdSpecified, null);
        }
        
        /// <remarks/>
        public void getTypeByIdAsync(string token, long usrId, bool usrIdSpecified, long typeId, bool typeIdSpecified, object userState) {
            if ((this.getTypeByIdOperationCompleted == null)) {
                this.getTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypeByIdOperationCompleted);
            }
            this.InvokeAsync("getTypeById", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        typeId,
                        typeIdSpecified}, this.getTypeByIdOperationCompleted, userState);
        }
        
        private void OngetTypeByIdOperationCompleted(object arg) {
            if ((this.getTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypeByIdCompleted(this, new getTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bankDto[] getBankList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getBankList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((bankDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getBankListAsync(string token, long usrId, bool usrIdSpecified) {
            this.getBankListAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getBankListAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getBankListOperationCompleted == null)) {
                this.getBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankListOperationCompleted);
            }
            this.InvokeAsync("getBankList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getBankListOperationCompleted, userState);
        }
        
        private void OngetBankListOperationCompleted(object arg) {
            if ((this.getBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankListCompleted(this, new getBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getOcrTemplateList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getOcrTemplateList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getOcrTemplateListAsync(string token, long usrId, bool usrIdSpecified) {
            this.getOcrTemplateListAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getOcrTemplateListAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getOcrTemplateListOperationCompleted == null)) {
                this.getOcrTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOcrTemplateListOperationCompleted);
            }
            this.InvokeAsync("getOcrTemplateList", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getOcrTemplateListOperationCompleted, userState);
        }
        
        private void OngetOcrTemplateListOperationCompleted(object arg) {
            if ((this.getOcrTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOcrTemplateListCompleted(this, new getOcrTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public paramDto getParamByAlias([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paramAlias) {
            object[] results = this.Invoke("getParamByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        paramAlias});
            return ((paramDto)(results[0]));
        }
        
        /// <remarks/>
        public void getParamByAliasAsync(string token, long usrId, bool usrIdSpecified, string paramAlias) {
            this.getParamByAliasAsync(token, usrId, usrIdSpecified, paramAlias, null);
        }
        
        /// <remarks/>
        public void getParamByAliasAsync(string token, long usrId, bool usrIdSpecified, string paramAlias, object userState) {
            if ((this.getParamByAliasOperationCompleted == null)) {
                this.getParamByAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParamByAliasOperationCompleted);
            }
            this.InvokeAsync("getParamByAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        paramAlias}, this.getParamByAliasOperationCompleted, userState);
        }
        
        private void OngetParamByAliasOperationCompleted(object arg) {
            if ((this.getParamByAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParamByAliasCompleted(this, new getParamByAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long getStationIdByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationName) {
            object[] results = this.Invoke("getStationIdByName", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getStationIdByNameAsync(string token, long usrId, bool usrIdSpecified, string stationName) {
            this.getStationIdByNameAsync(token, usrId, usrIdSpecified, stationName, null);
        }
        
        /// <remarks/>
        public void getStationIdByNameAsync(string token, long usrId, bool usrIdSpecified, string stationName, object userState) {
            if ((this.getStationIdByNameOperationCompleted == null)) {
                this.getStationIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationIdByNameOperationCompleted);
            }
            this.InvokeAsync("getStationIdByName", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationName}, this.getStationIdByNameOperationCompleted, userState);
        }
        
        private void OngetStationIdByNameOperationCompleted(object arg) {
            if ((this.getStationIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationIdByNameCompleted(this, new getStationIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reasonDto[] getReasonsByReasonGroupAlias([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string reasonGroupAlias) {
            object[] results = this.Invoke("getReasonsByReasonGroupAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        reasonGroupAlias});
            return ((reasonDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getReasonsByReasonGroupAliasAsync(string token, long usrId, bool usrIdSpecified, string reasonGroupAlias) {
            this.getReasonsByReasonGroupAliasAsync(token, usrId, usrIdSpecified, reasonGroupAlias, null);
        }
        
        /// <remarks/>
        public void getReasonsByReasonGroupAliasAsync(string token, long usrId, bool usrIdSpecified, string reasonGroupAlias, object userState) {
            if ((this.getReasonsByReasonGroupAliasOperationCompleted == null)) {
                this.getReasonsByReasonGroupAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReasonsByReasonGroupAliasOperationCompleted);
            }
            this.InvokeAsync("getReasonsByReasonGroupAlias", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        reasonGroupAlias}, this.getReasonsByReasonGroupAliasOperationCompleted, userState);
        }
        
        private void OngetReasonsByReasonGroupAliasOperationCompleted(object arg) {
            if ((this.getReasonsByReasonGroupAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReasonsByReasonGroupAliasCompleted(this, new getReasonsByReasonGroupAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class siteDto {
        
        private int siteActiveField;
        
        private bool siteActiveFieldSpecified;
        
        private string siteAddressField;
        
        private int siteBandWidthField;
        
        private bool siteBandWidthFieldSpecified;
        
        private string siteCloseTimeField;
        
        private System.DateTime siteControlField;
        
        private bool siteControlFieldSpecified;
        
        private int siteCoordXField;
        
        private bool siteCoordXFieldSpecified;
        
        private int siteCoordYField;
        
        private bool siteCoordYFieldSpecified;
        
        private System.DateTime siteEndDateField;
        
        private bool siteEndDateFieldSpecified;
        
        private int siteExternalIdField;
        
        private bool siteExternalIdFieldSpecified;
        
        private long siteIdField;
        
        private bool siteIdFieldSpecified;
        
        private System.DateTime siteInitDateField;
        
        private bool siteInitDateFieldSpecified;
        
        private string siteInternalNumberField;
        
        private System.DateTime siteLastCaptureTimeField;
        
        private bool siteLastCaptureTimeFieldSpecified;
        
        private string siteManagerField;
        
        private string siteMaxCaptureTimeField;
        
        private string siteNameField;
        
        private string siteOpenTimeField;
        
        private string sitePhoneField;
        
        private int sitePriorityField;
        
        private bool sitePriorityFieldSpecified;
        
        private int siteProcessGroupField;
        
        private bool siteProcessGroupFieldSpecified;
        
        private int siteStatusField;
        
        private bool siteStatusFieldSpecified;
        
        private int siteTypeField;
        
        private bool siteTypeFieldSpecified;
        
        private string siteXmlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteActive {
            get {
                return this.siteActiveField;
            }
            set {
                this.siteActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteActiveSpecified {
            get {
                return this.siteActiveFieldSpecified;
            }
            set {
                this.siteActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteAddress {
            get {
                return this.siteAddressField;
            }
            set {
                this.siteAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteBandWidth {
            get {
                return this.siteBandWidthField;
            }
            set {
                this.siteBandWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteBandWidthSpecified {
            get {
                return this.siteBandWidthFieldSpecified;
            }
            set {
                this.siteBandWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteCloseTime {
            get {
                return this.siteCloseTimeField;
            }
            set {
                this.siteCloseTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime siteControl {
            get {
                return this.siteControlField;
            }
            set {
                this.siteControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteControlSpecified {
            get {
                return this.siteControlFieldSpecified;
            }
            set {
                this.siteControlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteCoordX {
            get {
                return this.siteCoordXField;
            }
            set {
                this.siteCoordXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteCoordXSpecified {
            get {
                return this.siteCoordXFieldSpecified;
            }
            set {
                this.siteCoordXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteCoordY {
            get {
                return this.siteCoordYField;
            }
            set {
                this.siteCoordYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteCoordYSpecified {
            get {
                return this.siteCoordYFieldSpecified;
            }
            set {
                this.siteCoordYFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime siteEndDate {
            get {
                return this.siteEndDateField;
            }
            set {
                this.siteEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteEndDateSpecified {
            get {
                return this.siteEndDateFieldSpecified;
            }
            set {
                this.siteEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteExternalId {
            get {
                return this.siteExternalIdField;
            }
            set {
                this.siteExternalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteExternalIdSpecified {
            get {
                return this.siteExternalIdFieldSpecified;
            }
            set {
                this.siteExternalIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteIdSpecified {
            get {
                return this.siteIdFieldSpecified;
            }
            set {
                this.siteIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime siteInitDate {
            get {
                return this.siteInitDateField;
            }
            set {
                this.siteInitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteInitDateSpecified {
            get {
                return this.siteInitDateFieldSpecified;
            }
            set {
                this.siteInitDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteInternalNumber {
            get {
                return this.siteInternalNumberField;
            }
            set {
                this.siteInternalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime siteLastCaptureTime {
            get {
                return this.siteLastCaptureTimeField;
            }
            set {
                this.siteLastCaptureTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteLastCaptureTimeSpecified {
            get {
                return this.siteLastCaptureTimeFieldSpecified;
            }
            set {
                this.siteLastCaptureTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteManager {
            get {
                return this.siteManagerField;
            }
            set {
                this.siteManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteMaxCaptureTime {
            get {
                return this.siteMaxCaptureTimeField;
            }
            set {
                this.siteMaxCaptureTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteOpenTime {
            get {
                return this.siteOpenTimeField;
            }
            set {
                this.siteOpenTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sitePhone {
            get {
                return this.sitePhoneField;
            }
            set {
                this.sitePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sitePriority {
            get {
                return this.sitePriorityField;
            }
            set {
                this.sitePriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sitePrioritySpecified {
            get {
                return this.sitePriorityFieldSpecified;
            }
            set {
                this.sitePriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteProcessGroup {
            get {
                return this.siteProcessGroupField;
            }
            set {
                this.siteProcessGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteProcessGroupSpecified {
            get {
                return this.siteProcessGroupFieldSpecified;
            }
            set {
                this.siteProcessGroupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteStatus {
            get {
                return this.siteStatusField;
            }
            set {
                this.siteStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteStatusSpecified {
            get {
                return this.siteStatusFieldSpecified;
            }
            set {
                this.siteStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteType {
            get {
                return this.siteTypeField;
            }
            set {
                this.siteTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteTypeSpecified {
            get {
                return this.siteTypeFieldSpecified;
            }
            set {
                this.siteTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteXml {
            get {
                return this.siteXmlField;
            }
            set {
                this.siteXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class reasonDto {
        
        private long reasonIdField;
        
        private bool reasonIdFieldSpecified;
        
        private string reasonNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long reasonId {
            get {
                return this.reasonIdField;
            }
            set {
                this.reasonIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reasonIdSpecified {
            get {
                return this.reasonIdFieldSpecified;
            }
            set {
                this.reasonIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reasonName {
            get {
                return this.reasonNameField;
            }
            set {
                this.reasonNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class bankDto {
        
        private long bankIdField;
        
        private bool bankIdFieldSpecified;
        
        private System.DateTime bankLastUpdateField;
        
        private bool bankLastUpdateFieldSpecified;
        
        private string bankNameField;
        
        private int bankStatusField;
        
        private bool bankStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bankId {
            get {
                return this.bankIdField;
            }
            set {
                this.bankIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bankIdSpecified {
            get {
                return this.bankIdFieldSpecified;
            }
            set {
                this.bankIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime bankLastUpdate {
            get {
                return this.bankLastUpdateField;
            }
            set {
                this.bankLastUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bankLastUpdateSpecified {
            get {
                return this.bankLastUpdateFieldSpecified;
            }
            set {
                this.bankLastUpdateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bankStatus {
            get {
                return this.bankStatusField;
            }
            set {
                this.bankStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bankStatusSpecified {
            get {
                return this.bankStatusFieldSpecified;
            }
            set {
                this.bankStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class queueDto {
        
        private int countObjsField;
        
        private bool countObjsFieldSpecified;
        
        private int countUsersField;
        
        private bool countUsersFieldSpecified;
        
        private System.DateTime forecastField;
        
        private bool forecastFieldSpecified;
        
        private int queueActiveField;
        
        private bool queueActiveFieldSpecified;
        
        private string queueAliasField;
        
        private int queueAvgTimeField;
        
        private bool queueAvgTimeFieldSpecified;
        
        private int queueCacheField;
        
        private bool queueCacheFieldSpecified;
        
        private string queueFunctionField;
        
        private long queueIdField;
        
        private bool queueIdFieldSpecified;
        
        private int queueLoadField;
        
        private bool queueLoadFieldSpecified;
        
        private int queueMasterField;
        
        private bool queueMasterFieldSpecified;
        
        private string queueModuleField;
        
        private string queueNameField;
        
        private string queueParamField;
        
        private int queuePriorityField;
        
        private bool queuePriorityFieldSpecified;
        
        private string queueRuleField;
        
        private int queueSwapField;
        
        private bool queueSwapFieldSpecified;
        
        private int queueTimeControlField;
        
        private bool queueTimeControlFieldSpecified;
        
        private string queueXmlField;
        
        private int timeTotalField;
        
        private bool timeTotalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int countObjs {
            get {
                return this.countObjsField;
            }
            set {
                this.countObjsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countObjsSpecified {
            get {
                return this.countObjsFieldSpecified;
            }
            set {
                this.countObjsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int countUsers {
            get {
                return this.countUsersField;
            }
            set {
                this.countUsersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countUsersSpecified {
            get {
                return this.countUsersFieldSpecified;
            }
            set {
                this.countUsersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime forecast {
            get {
                return this.forecastField;
            }
            set {
                this.forecastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forecastSpecified {
            get {
                return this.forecastFieldSpecified;
            }
            set {
                this.forecastFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueActive {
            get {
                return this.queueActiveField;
            }
            set {
                this.queueActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueActiveSpecified {
            get {
                return this.queueActiveFieldSpecified;
            }
            set {
                this.queueActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueAlias {
            get {
                return this.queueAliasField;
            }
            set {
                this.queueAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueAvgTime {
            get {
                return this.queueAvgTimeField;
            }
            set {
                this.queueAvgTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueAvgTimeSpecified {
            get {
                return this.queueAvgTimeFieldSpecified;
            }
            set {
                this.queueAvgTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueCache {
            get {
                return this.queueCacheField;
            }
            set {
                this.queueCacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueCacheSpecified {
            get {
                return this.queueCacheFieldSpecified;
            }
            set {
                this.queueCacheFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueFunction {
            get {
                return this.queueFunctionField;
            }
            set {
                this.queueFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long queueId {
            get {
                return this.queueIdField;
            }
            set {
                this.queueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueIdSpecified {
            get {
                return this.queueIdFieldSpecified;
            }
            set {
                this.queueIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueLoad {
            get {
                return this.queueLoadField;
            }
            set {
                this.queueLoadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueLoadSpecified {
            get {
                return this.queueLoadFieldSpecified;
            }
            set {
                this.queueLoadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueMaster {
            get {
                return this.queueMasterField;
            }
            set {
                this.queueMasterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueMasterSpecified {
            get {
                return this.queueMasterFieldSpecified;
            }
            set {
                this.queueMasterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueModule {
            get {
                return this.queueModuleField;
            }
            set {
                this.queueModuleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueName {
            get {
                return this.queueNameField;
            }
            set {
                this.queueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueParam {
            get {
                return this.queueParamField;
            }
            set {
                this.queueParamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queuePriority {
            get {
                return this.queuePriorityField;
            }
            set {
                this.queuePriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queuePrioritySpecified {
            get {
                return this.queuePriorityFieldSpecified;
            }
            set {
                this.queuePriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueRule {
            get {
                return this.queueRuleField;
            }
            set {
                this.queueRuleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueSwap {
            get {
                return this.queueSwapField;
            }
            set {
                this.queueSwapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueSwapSpecified {
            get {
                return this.queueSwapFieldSpecified;
            }
            set {
                this.queueSwapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueTimeControl {
            get {
                return this.queueTimeControlField;
            }
            set {
                this.queueTimeControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueTimeControlSpecified {
            get {
                return this.queueTimeControlFieldSpecified;
            }
            set {
                this.queueTimeControlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueXml {
            get {
                return this.queueXmlField;
            }
            set {
                this.queueXmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeTotal {
            get {
                return this.timeTotalField;
            }
            set {
                this.timeTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeTotalSpecified {
            get {
                return this.timeTotalFieldSpecified;
            }
            set {
                this.timeTotalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class clearingDto {
        
        private long clearingIdField;
        
        private bool clearingIdFieldSpecified;
        
        private System.DateTime clearingLastUpdateField;
        
        private bool clearingLastUpdateFieldSpecified;
        
        private string clearingNameField;
        
        private int clearingStatusField;
        
        private bool clearingStatusFieldSpecified;
        
        private int clearingTypeField;
        
        private bool clearingTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long clearingId {
            get {
                return this.clearingIdField;
            }
            set {
                this.clearingIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clearingIdSpecified {
            get {
                return this.clearingIdFieldSpecified;
            }
            set {
                this.clearingIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime clearingLastUpdate {
            get {
                return this.clearingLastUpdateField;
            }
            set {
                this.clearingLastUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clearingLastUpdateSpecified {
            get {
                return this.clearingLastUpdateFieldSpecified;
            }
            set {
                this.clearingLastUpdateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clearingName {
            get {
                return this.clearingNameField;
            }
            set {
                this.clearingNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int clearingStatus {
            get {
                return this.clearingStatusField;
            }
            set {
                this.clearingStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clearingStatusSpecified {
            get {
                return this.clearingStatusFieldSpecified;
            }
            set {
                this.clearingStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int clearingType {
            get {
                return this.clearingTypeField;
            }
            set {
                this.clearingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clearingTypeSpecified {
            get {
                return this.clearingTypeFieldSpecified;
            }
            set {
                this.clearingTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class mediaTypeDto {
        
        private int mediaTypeCapacityField;
        
        private bool mediaTypeCapacityFieldSpecified;
        
        private long mediaTypeIdField;
        
        private bool mediaTypeIdFieldSpecified;
        
        private string mediaTypeNameField;
        
        private int mediaTypeValidityField;
        
        private bool mediaTypeValidityFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mediaTypeCapacity {
            get {
                return this.mediaTypeCapacityField;
            }
            set {
                this.mediaTypeCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mediaTypeCapacitySpecified {
            get {
                return this.mediaTypeCapacityFieldSpecified;
            }
            set {
                this.mediaTypeCapacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long mediaTypeId {
            get {
                return this.mediaTypeIdField;
            }
            set {
                this.mediaTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mediaTypeIdSpecified {
            get {
                return this.mediaTypeIdFieldSpecified;
            }
            set {
                this.mediaTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mediaTypeName {
            get {
                return this.mediaTypeNameField;
            }
            set {
                this.mediaTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mediaTypeValidity {
            get {
                return this.mediaTypeValidityField;
            }
            set {
                this.mediaTypeValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mediaTypeValiditySpecified {
            get {
                return this.mediaTypeValidityFieldSpecified;
            }
            set {
                this.mediaTypeValidityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class workflowDto {
        
        private string workflowAliasField;
        
        private int workflowDailyField;
        
        private bool workflowDailyFieldSpecified;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        private string workflowNameField;
        
        private string workflowXmlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowAlias {
            get {
                return this.workflowAliasField;
            }
            set {
                this.workflowAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int workflowDaily {
            get {
                return this.workflowDailyField;
            }
            set {
                this.workflowDailyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowDailySpecified {
            get {
                return this.workflowDailyFieldSpecified;
            }
            set {
                this.workflowDailyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowName {
            get {
                return this.workflowNameField;
            }
            set {
                this.workflowNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workflowXml {
            get {
                return this.workflowXmlField;
            }
            set {
                this.workflowXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class paramDto {
        
        private string paramAliasField;
        
        private string paramValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramAlias {
            get {
                return this.paramAliasField;
            }
            set {
                this.paramAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class checkListDto {
        
        private long checkListIdField;
        
        private bool checkListIdFieldSpecified;
        
        private int checkListMandatoryField;
        
        private bool checkListMandatoryFieldSpecified;
        
        private string checkListObsField;
        
        private long typeIdField;
        
        private bool typeIdFieldSpecified;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long checkListId {
            get {
                return this.checkListIdField;
            }
            set {
                this.checkListIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool checkListIdSpecified {
            get {
                return this.checkListIdFieldSpecified;
            }
            set {
                this.checkListIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int checkListMandatory {
            get {
                return this.checkListMandatoryField;
            }
            set {
                this.checkListMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool checkListMandatorySpecified {
            get {
                return this.checkListMandatoryFieldSpecified;
            }
            set {
                this.checkListMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string checkListObs {
            get {
                return this.checkListObsField;
            }
            set {
                this.checkListObsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeIdSpecified {
            get {
                return this.typeIdFieldSpecified;
            }
            set {
                this.typeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class hwScanDto {
        
        private int hwScanBrightnessField;
        
        private bool hwScanBrightnessFieldSpecified;
        
        private int hwScanColorFormatField;
        
        private bool hwScanColorFormatFieldSpecified;
        
        private int hwScanCompressionField;
        
        private bool hwScanCompressionFieldSpecified;
        
        private int hwScanContrastField;
        
        private bool hwScanContrastFieldSpecified;
        
        private string hwScanDriverField;
        
        private int hwScanDriverTypeField;
        
        private bool hwScanDriverTypeFieldSpecified;
        
        private int hwScanGammaField;
        
        private bool hwScanGammaFieldSpecified;
        
        private long hwScanIdField;
        
        private bool hwScanIdFieldSpecified;
        
        private int hwScanMaintenance1Field;
        
        private bool hwScanMaintenance1FieldSpecified;
        
        private int hwScanMaintenance2Field;
        
        private bool hwScanMaintenance2FieldSpecified;
        
        private string hwScanNameField;
        
        private int hwScanOutputTypeField;
        
        private bool hwScanOutputTypeFieldSpecified;
        
        private int hwScanSchemaField;
        
        private bool hwScanSchemaFieldSpecified;
        
        private string hwScanXmlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanBrightness {
            get {
                return this.hwScanBrightnessField;
            }
            set {
                this.hwScanBrightnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanBrightnessSpecified {
            get {
                return this.hwScanBrightnessFieldSpecified;
            }
            set {
                this.hwScanBrightnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanColorFormat {
            get {
                return this.hwScanColorFormatField;
            }
            set {
                this.hwScanColorFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanColorFormatSpecified {
            get {
                return this.hwScanColorFormatFieldSpecified;
            }
            set {
                this.hwScanColorFormatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanCompression {
            get {
                return this.hwScanCompressionField;
            }
            set {
                this.hwScanCompressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanCompressionSpecified {
            get {
                return this.hwScanCompressionFieldSpecified;
            }
            set {
                this.hwScanCompressionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanContrast {
            get {
                return this.hwScanContrastField;
            }
            set {
                this.hwScanContrastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanContrastSpecified {
            get {
                return this.hwScanContrastFieldSpecified;
            }
            set {
                this.hwScanContrastFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hwScanDriver {
            get {
                return this.hwScanDriverField;
            }
            set {
                this.hwScanDriverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanDriverType {
            get {
                return this.hwScanDriverTypeField;
            }
            set {
                this.hwScanDriverTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanDriverTypeSpecified {
            get {
                return this.hwScanDriverTypeFieldSpecified;
            }
            set {
                this.hwScanDriverTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanGamma {
            get {
                return this.hwScanGammaField;
            }
            set {
                this.hwScanGammaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanGammaSpecified {
            get {
                return this.hwScanGammaFieldSpecified;
            }
            set {
                this.hwScanGammaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hwScanId {
            get {
                return this.hwScanIdField;
            }
            set {
                this.hwScanIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanIdSpecified {
            get {
                return this.hwScanIdFieldSpecified;
            }
            set {
                this.hwScanIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanMaintenance1 {
            get {
                return this.hwScanMaintenance1Field;
            }
            set {
                this.hwScanMaintenance1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanMaintenance1Specified {
            get {
                return this.hwScanMaintenance1FieldSpecified;
            }
            set {
                this.hwScanMaintenance1FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanMaintenance2 {
            get {
                return this.hwScanMaintenance2Field;
            }
            set {
                this.hwScanMaintenance2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanMaintenance2Specified {
            get {
                return this.hwScanMaintenance2FieldSpecified;
            }
            set {
                this.hwScanMaintenance2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hwScanName {
            get {
                return this.hwScanNameField;
            }
            set {
                this.hwScanNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanOutputType {
            get {
                return this.hwScanOutputTypeField;
            }
            set {
                this.hwScanOutputTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanOutputTypeSpecified {
            get {
                return this.hwScanOutputTypeFieldSpecified;
            }
            set {
                this.hwScanOutputTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hwScanSchema {
            get {
                return this.hwScanSchemaField;
            }
            set {
                this.hwScanSchemaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hwScanSchemaSpecified {
            get {
                return this.hwScanSchemaFieldSpecified;
            }
            set {
                this.hwScanSchemaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hwScanXml {
            get {
                return this.hwScanXmlField;
            }
            set {
                this.hwScanXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class keyDefDto {
        
        private long keyDefIdField;
        
        private bool keyDefIdFieldSpecified;
        
        private int keyDefMandatoryField;
        
        private bool keyDefMandatoryFieldSpecified;
        
        private string keyDefNameField;
        
        private long typeIdField;
        
        private bool typeIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long keyDefId {
            get {
                return this.keyDefIdField;
            }
            set {
                this.keyDefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keyDefIdSpecified {
            get {
                return this.keyDefIdFieldSpecified;
            }
            set {
                this.keyDefIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int keyDefMandatory {
            get {
                return this.keyDefMandatoryField;
            }
            set {
                this.keyDefMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keyDefMandatorySpecified {
            get {
                return this.keyDefMandatoryFieldSpecified;
            }
            set {
                this.keyDefMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyDefName {
            get {
                return this.keyDefNameField;
            }
            set {
                this.keyDefNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeIdSpecified {
            get {
                return this.typeIdFieldSpecified;
            }
            set {
                this.typeIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class typeDto {
        
        private keyDefDto[] keyDefDtoListField;
        
        private string typeAliasField;
        
        private long typeIdField;
        
        private bool typeIdFieldSpecified;
        
        private string typeNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keyDefDtoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public keyDefDto[] keyDefDtoList {
            get {
                return this.keyDefDtoListField;
            }
            set {
                this.keyDefDtoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeAlias {
            get {
                return this.typeAliasField;
            }
            set {
                this.typeAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeIdSpecified {
            get {
                return this.typeIdFieldSpecified;
            }
            set {
                this.typeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class permissionDto {
        
        private string permissionAliasField;
        
        private System.DateTime permissionEndDateField;
        
        private bool permissionEndDateFieldSpecified;
        
        private long permissionIdField;
        
        private bool permissionIdFieldSpecified;
        
        private string permissionNameField;
        
        private System.DateTime permissionStartDateField;
        
        private bool permissionStartDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string permissionAlias {
            get {
                return this.permissionAliasField;
            }
            set {
                this.permissionAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime permissionEndDate {
            get {
                return this.permissionEndDateField;
            }
            set {
                this.permissionEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionEndDateSpecified {
            get {
                return this.permissionEndDateFieldSpecified;
            }
            set {
                this.permissionEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long permissionId {
            get {
                return this.permissionIdField;
            }
            set {
                this.permissionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionIdSpecified {
            get {
                return this.permissionIdFieldSpecified;
            }
            set {
                this.permissionIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string permissionName {
            get {
                return this.permissionNameField;
            }
            set {
                this.permissionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime permissionStartDate {
            get {
                return this.permissionStartDateField;
            }
            set {
                this.permissionStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionStartDateSpecified {
            get {
                return this.permissionStartDateFieldSpecified;
            }
            set {
                this.permissionStartDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getSiteByIdCompletedEventHandler(object sender, getSiteByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSiteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSiteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public siteDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((siteDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getPermissionsCompletedEventHandler(object sender, getPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public permissionDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((permissionDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getTypesByWorkflowIdCompletedEventHandler(object sender, getTypesByWorkflowIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypesByWorkflowIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypesByWorkflowIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public typeDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((typeDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void createParamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getHwScanCompletedEventHandler(object sender, getHwScanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHwScanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHwScanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hwScanDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hwScanDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getCheckListCompletedEventHandler(object sender, getCheckListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkListDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkListDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getOrganizationLogoCompletedEventHandler(object sender, getOrganizationLogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrganizationLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrganizationLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getAllParamCompletedEventHandler(object sender, getAllParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paramDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paramDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getWorkflowByIdCompletedEventHandler(object sender, getWorkflowByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public workflowDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((workflowDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getMediaTypeCompletedEventHandler(object sender, getMediaTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMediaTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMediaTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mediaTypeDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mediaTypeDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getWorkflowByAliasCompletedEventHandler(object sender, getWorkflowByAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowByAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowByAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public workflowDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((workflowDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getClearingListCompletedEventHandler(object sender, getClearingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClearingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClearingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clearingDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clearingDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getAllTypesCompletedEventHandler(object sender, getAllTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public typeDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((typeDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getQueuesByUsrGroupsIdCompletedEventHandler(object sender, getQueuesByUsrGroupsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueuesByUsrGroupsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueuesByUsrGroupsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getTypeByAliasCompletedEventHandler(object sender, getTypeByAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypeByAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypeByAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public typeDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((typeDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void isValidBranchCompletedEventHandler(object sender, isValidBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isValidBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void setParamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getWorkflowByUsrGroupsCompletedEventHandler(object sender, getWorkflowByUsrGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowByUsrGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowByUsrGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public workflowDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((workflowDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getTypeByIdCompletedEventHandler(object sender, getTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public typeDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((typeDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getBankListCompletedEventHandler(object sender, getBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bankDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bankDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getOcrTemplateListCompletedEventHandler(object sender, getOcrTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOcrTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOcrTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getParamByAliasCompletedEventHandler(object sender, getParamByAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParamByAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParamByAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paramDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paramDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getStationIdByNameCompletedEventHandler(object sender, getStationIdByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getReasonsByReasonGroupAliasCompletedEventHandler(object sender, getReasonsByReasonGroupAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReasonsByReasonGroupAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReasonsByReasonGroupAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public reasonDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reasonDto[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591