//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5466.
// 
#pragma warning disable 1591

namespace FlexImage.WebService.QueueWebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QueueFServiceSoapBinding", Namespace="http://impl.service.flexps.flexdoc.com.br/")]
    public partial class QueueFService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortBatchInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback refreshTransOperationCompleted;
        
        private System.Threading.SendOrPostCallback refreshBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutomaticQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocsInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocsInQueueForSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortDocsInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocsInQueueByWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortTransInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRobotInQueueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QueueFService() {
            this.Url = global::FlexImage.WebService.Properties.Settings.Default.FlexImage_WSQueue_QueueWebReference_QueueFService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getMonitoringCompletedEventHandler getMonitoringCompleted;
        
        /// <remarks/>
        public event getTransInQueueCompletedEventHandler getTransInQueueCompleted;
        
        /// <remarks/>
        public event abortBatchInQueueCompletedEventHandler abortBatchInQueueCompleted;
        
        /// <remarks/>
        public event refreshTransCompletedEventHandler refreshTransCompleted;
        
        /// <remarks/>
        public event refreshBatchCompletedEventHandler refreshBatchCompleted;
        
        /// <remarks/>
        public event getAutomaticQueueCompletedEventHandler getAutomaticQueueCompleted;
        
        /// <remarks/>
        public event getDocsInQueueCompletedEventHandler getDocsInQueueCompleted;
        
        /// <remarks/>
        public event getDocsInQueueForSystemCompletedEventHandler getDocsInQueueForSystemCompleted;
        
        /// <remarks/>
        public event abortDocsInQueueCompletedEventHandler abortDocsInQueueCompleted;
        
        /// <remarks/>
        public event getBatchInQueueCompletedEventHandler getBatchInQueueCompleted;
        
        /// <remarks/>
        public event getDocsInQueueByWorkflowCompletedEventHandler getDocsInQueueByWorkflowCompleted;
        
        /// <remarks/>
        public event abortTransInQueueCompletedEventHandler abortTransInQueueCompleted;
        
        /// <remarks/>
        public event getRobotInQueueCompletedEventHandler getRobotInQueueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public queueMonitoringDto[] getMonitoring([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified) {
            object[] results = this.Invoke("getMonitoring", new object[] {
                        token,
                        usrId,
                        usrIdSpecified});
            return ((queueMonitoringDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getMonitoringAsync(string token, long usrId, bool usrIdSpecified) {
            this.getMonitoringAsync(token, usrId, usrIdSpecified, null);
        }
        
        /// <remarks/>
        public void getMonitoringAsync(string token, long usrId, bool usrIdSpecified, object userState) {
            if ((this.getMonitoringOperationCompleted == null)) {
                this.getMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMonitoringOperationCompleted);
            }
            this.InvokeAsync("getMonitoring", new object[] {
                        token,
                        usrId,
                        usrIdSpecified}, this.getMonitoringOperationCompleted, userState);
        }
        
        private void OngetMonitoringOperationCompleted(object arg) {
            if ((this.getMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMonitoringCompleted(this, new getMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public transQueueDto[] getTransInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long siteId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool siteIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numObjs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool numObjsSpecified) {
            object[] results = this.Invoke("getTransInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified});
            return ((transQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getTransInQueueAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified) {
            this.getTransInQueueAsync(token, usrId, usrIdSpecified, siteId, siteIdSpecified, queueId, queueIdSpecified, numObjs, numObjsSpecified, null);
        }
        
        /// <remarks/>
        public void getTransInQueueAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified, object userState) {
            if ((this.getTransInQueueOperationCompleted == null)) {
                this.getTransInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransInQueueOperationCompleted);
            }
            this.InvokeAsync("getTransInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified}, this.getTransInQueueOperationCompleted, userState);
        }
        
        private void OngetTransInQueueOperationCompleted(object arg) {
            if ((this.getTransInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransInQueueCompleted(this, new getTransInQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void abortBatchInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] batchQueueDto batchQueueDto) {
            this.Invoke("abortBatchInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        batchQueueDto});
        }
        
        /// <remarks/>
        public void abortBatchInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, batchQueueDto batchQueueDto) {
            this.abortBatchInQueueAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, batchQueueDto, null);
        }
        
        /// <remarks/>
        public void abortBatchInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, batchQueueDto batchQueueDto, object userState) {
            if ((this.abortBatchInQueueOperationCompleted == null)) {
                this.abortBatchInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortBatchInQueueOperationCompleted);
            }
            this.InvokeAsync("abortBatchInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        batchQueueDto}, this.abortBatchInQueueOperationCompleted, userState);
        }
        
        private void OnabortBatchInQueueOperationCompleted(object arg) {
            if ((this.abortBatchInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortBatchInQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public transQueueDto refreshTrans([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long transId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool transIdSpecified) {
            object[] results = this.Invoke("refreshTrans", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        transId,
                        transIdSpecified});
            return ((transQueueDto)(results[0]));
        }
        
        /// <remarks/>
        public void refreshTransAsync(string token, long usrId, bool usrIdSpecified, long transId, bool transIdSpecified) {
            this.refreshTransAsync(token, usrId, usrIdSpecified, transId, transIdSpecified, null);
        }
        
        /// <remarks/>
        public void refreshTransAsync(string token, long usrId, bool usrIdSpecified, long transId, bool transIdSpecified, object userState) {
            if ((this.refreshTransOperationCompleted == null)) {
                this.refreshTransOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshTransOperationCompleted);
            }
            this.InvokeAsync("refreshTrans", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        transId,
                        transIdSpecified}, this.refreshTransOperationCompleted, userState);
        }
        
        private void OnrefreshTransOperationCompleted(object arg) {
            if ((this.refreshTransCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refreshTransCompleted(this, new refreshTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchQueueDto refreshBatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long batchId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool batchIdSpecified) {
            object[] results = this.Invoke("refreshBatch", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified,
                        batchId,
                        batchIdSpecified});
            return ((batchQueueDto)(results[0]));
        }
        
        /// <remarks/>
        public void refreshBatchAsync(string token, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, long batchId, bool batchIdSpecified) {
            this.refreshBatchAsync(token, usrId, usrIdSpecified, stationId, stationIdSpecified, batchId, batchIdSpecified, null);
        }
        
        /// <remarks/>
        public void refreshBatchAsync(string token, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, long batchId, bool batchIdSpecified, object userState) {
            if ((this.refreshBatchOperationCompleted == null)) {
                this.refreshBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshBatchOperationCompleted);
            }
            this.InvokeAsync("refreshBatch", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified,
                        batchId,
                        batchIdSpecified}, this.refreshBatchOperationCompleted, userState);
        }
        
        private void OnrefreshBatchOperationCompleted(object arg) {
            if ((this.refreshBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refreshBatchCompleted(this, new refreshBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long getAutomaticQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute("usrGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long[] usrGroupIds) {
            object[] results = this.Invoke("getAutomaticQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getAutomaticQueueAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds) {
            this.getAutomaticQueueAsync(token, usrId, usrIdSpecified, usrGroupIds, null);
        }
        
        /// <remarks/>
        public void getAutomaticQueueAsync(string token, long usrId, bool usrIdSpecified, long[] usrGroupIds, object userState) {
            if ((this.getAutomaticQueueOperationCompleted == null)) {
                this.getAutomaticQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutomaticQueueOperationCompleted);
            }
            this.InvokeAsync("getAutomaticQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        usrGroupIds}, this.getAutomaticQueueOperationCompleted, userState);
        }
        
        private void OngetAutomaticQueueOperationCompleted(object arg) {
            if ((this.getAutomaticQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutomaticQueueCompleted(this, new getAutomaticQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docQueueDto[] getDocsInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numObjs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool numObjsSpecified) {
            object[] results = this.Invoke("getDocsInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified});
            return ((docQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocsInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified) {
            this.getDocsInQueueAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, numObjs, numObjsSpecified, null);
        }
        
        /// <remarks/>
        public void getDocsInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified, object userState) {
            if ((this.getDocsInQueueOperationCompleted == null)) {
                this.getDocsInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocsInQueueOperationCompleted);
            }
            this.InvokeAsync("getDocsInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified}, this.getDocsInQueueOperationCompleted, userState);
        }
        
        private void OngetDocsInQueueOperationCompleted(object arg) {
            if ((this.getDocsInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocsInQueueCompleted(this, new getDocsInQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docQueueDto[] getDocsInQueueForSystem([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numObjs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool numObjsSpecified) {
            object[] results = this.Invoke("getDocsInQueueForSystem", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified});
            return ((docQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocsInQueueForSystemAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified) {
            this.getDocsInQueueForSystemAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, numObjs, numObjsSpecified, null);
        }
        
        /// <remarks/>
        public void getDocsInQueueForSystemAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified, object userState) {
            if ((this.getDocsInQueueForSystemOperationCompleted == null)) {
                this.getDocsInQueueForSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocsInQueueForSystemOperationCompleted);
            }
            this.InvokeAsync("getDocsInQueueForSystem", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified}, this.getDocsInQueueForSystemOperationCompleted, userState);
        }
        
        private void OngetDocsInQueueForSystemOperationCompleted(object arg) {
            if ((this.getDocsInQueueForSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocsInQueueForSystemCompleted(this, new getDocsInQueueForSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void abortDocsInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] docQueueDto docQueueDto) {
            this.Invoke("abortDocsInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        docQueueDto});
        }
        
        /// <remarks/>
        public void abortDocsInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, docQueueDto docQueueDto) {
            this.abortDocsInQueueAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, docQueueDto, null);
        }
        
        /// <remarks/>
        public void abortDocsInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, docQueueDto docQueueDto, object userState) {
            if ((this.abortDocsInQueueOperationCompleted == null)) {
                this.abortDocsInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortDocsInQueueOperationCompleted);
            }
            this.InvokeAsync("abortDocsInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        docQueueDto}, this.abortDocsInQueueOperationCompleted, userState);
        }
        
        private void OnabortDocsInQueueOperationCompleted(object arg) {
            if ((this.abortDocsInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortDocsInQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchQueueDto[] getBatchInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long siteId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool siteIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numObjs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool numObjsSpecified) {
            object[] results = this.Invoke("getBatchInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified});
            return ((batchQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getBatchInQueueAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified) {
            this.getBatchInQueueAsync(token, usrId, usrIdSpecified, siteId, siteIdSpecified, queueId, queueIdSpecified, numObjs, numObjsSpecified, null);
        }
        
        /// <remarks/>
        public void getBatchInQueueAsync(string token, long usrId, bool usrIdSpecified, long siteId, bool siteIdSpecified, long queueId, bool queueIdSpecified, int numObjs, bool numObjsSpecified, object userState) {
            if ((this.getBatchInQueueOperationCompleted == null)) {
                this.getBatchInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchInQueueOperationCompleted);
            }
            this.InvokeAsync("getBatchInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        siteId,
                        siteIdSpecified,
                        queueId,
                        queueIdSpecified,
                        numObjs,
                        numObjsSpecified}, this.getBatchInQueueOperationCompleted, userState);
        }
        
        private void OngetBatchInQueueOperationCompleted(object arg) {
            if ((this.getBatchInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchInQueueCompleted(this, new getBatchInQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public docQueueDto[] getDocsInQueueByWorkflow([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long workflowId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool workflowIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numObjs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool numObjsSpecified) {
            object[] results = this.Invoke("getDocsInQueueByWorkflow", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        workflowId,
                        workflowIdSpecified,
                        numObjs,
                        numObjsSpecified});
            return ((docQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocsInQueueByWorkflowAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, long workflowId, bool workflowIdSpecified, int numObjs, bool numObjsSpecified) {
            this.getDocsInQueueByWorkflowAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, workflowId, workflowIdSpecified, numObjs, numObjsSpecified, null);
        }
        
        /// <remarks/>
        public void getDocsInQueueByWorkflowAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, long workflowId, bool workflowIdSpecified, int numObjs, bool numObjsSpecified, object userState) {
            if ((this.getDocsInQueueByWorkflowOperationCompleted == null)) {
                this.getDocsInQueueByWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocsInQueueByWorkflowOperationCompleted);
            }
            this.InvokeAsync("getDocsInQueueByWorkflow", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        workflowId,
                        workflowIdSpecified,
                        numObjs,
                        numObjsSpecified}, this.getDocsInQueueByWorkflowOperationCompleted, userState);
        }
        
        private void OngetDocsInQueueByWorkflowOperationCompleted(object arg) {
            if ((this.getDocsInQueueByWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocsInQueueByWorkflowCompleted(this, new getDocsInQueueByWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void abortTransInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long queueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] transQueueDto transQueueDto) {
            this.Invoke("abortTransInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        transQueueDto});
        }
        
        /// <remarks/>
        public void abortTransInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, transQueueDto transQueueDto) {
            this.abortTransInQueueAsync(token, usrId, usrIdSpecified, queueId, queueIdSpecified, transQueueDto, null);
        }
        
        /// <remarks/>
        public void abortTransInQueueAsync(string token, long usrId, bool usrIdSpecified, long queueId, bool queueIdSpecified, transQueueDto transQueueDto, object userState) {
            if ((this.abortTransInQueueOperationCompleted == null)) {
                this.abortTransInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortTransInQueueOperationCompleted);
            }
            this.InvokeAsync("abortTransInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        queueId,
                        queueIdSpecified,
                        transQueueDto}, this.abortTransInQueueOperationCompleted, userState);
        }
        
        private void OnabortTransInQueueOperationCompleted(object arg) {
            if ((this.abortTransInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortTransInQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.flexps.flexdoc.com.br/", ResponseNamespace="http://service.flexps.flexdoc.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public robotQueueDto[] getRobotInQueue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long usrId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool usrIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long stationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool stationIdSpecified) {
            object[] results = this.Invoke("getRobotInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified});
            return ((robotQueueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getRobotInQueueAsync(string token, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified) {
            this.getRobotInQueueAsync(token, usrId, usrIdSpecified, stationId, stationIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRobotInQueueAsync(string token, long usrId, bool usrIdSpecified, long stationId, bool stationIdSpecified, object userState) {
            if ((this.getRobotInQueueOperationCompleted == null)) {
                this.getRobotInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRobotInQueueOperationCompleted);
            }
            this.InvokeAsync("getRobotInQueue", new object[] {
                        token,
                        usrId,
                        usrIdSpecified,
                        stationId,
                        stationIdSpecified}, this.getRobotInQueueOperationCompleted, userState);
        }
        
        private void OngetRobotInQueueOperationCompleted(object arg) {
            if ((this.getRobotInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRobotInQueueCompleted(this, new getRobotInQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class queueMonitoringDto {
        
        private int countObjsField;
        
        private bool countObjsFieldSpecified;
        
        private int countUsersField;
        
        private bool countUsersFieldSpecified;
        
        private System.DateTime forecastField;
        
        private bool forecastFieldSpecified;
        
        private int queueAvgField;
        
        private bool queueAvgFieldSpecified;
        
        private string queueFunctionField;
        
        private long queueIdField;
        
        private bool queueIdFieldSpecified;
        
        private string queueNameField;
        
        private bool selectedField;
        
        private int timeTotalField;
        
        private bool timeTotalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int countObjs {
            get {
                return this.countObjsField;
            }
            set {
                this.countObjsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countObjsSpecified {
            get {
                return this.countObjsFieldSpecified;
            }
            set {
                this.countObjsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int countUsers {
            get {
                return this.countUsersField;
            }
            set {
                this.countUsersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countUsersSpecified {
            get {
                return this.countUsersFieldSpecified;
            }
            set {
                this.countUsersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime forecast {
            get {
                return this.forecastField;
            }
            set {
                this.forecastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forecastSpecified {
            get {
                return this.forecastFieldSpecified;
            }
            set {
                this.forecastFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int queueAvg {
            get {
                return this.queueAvgField;
            }
            set {
                this.queueAvgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueAvgSpecified {
            get {
                return this.queueAvgFieldSpecified;
            }
            set {
                this.queueAvgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueFunction {
            get {
                return this.queueFunctionField;
            }
            set {
                this.queueFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long queueId {
            get {
                return this.queueIdField;
            }
            set {
                this.queueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queueIdSpecified {
            get {
                return this.queueIdFieldSpecified;
            }
            set {
                this.queueIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string queueName {
            get {
                return this.queueNameField;
            }
            set {
                this.queueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timeTotal {
            get {
                return this.timeTotalField;
            }
            set {
                this.timeTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeTotalSpecified {
            get {
                return this.timeTotalFieldSpecified;
            }
            set {
                this.timeTotalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class robotQueueDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private int documentCaptureSeqField;
        
        private bool documentCaptureSeqFieldSpecified;
        
        private long documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private long stationIdField;
        
        private bool stationIdFieldSpecified;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentCaptureSeq {
            get {
                return this.documentCaptureSeqField;
            }
            set {
                this.documentCaptureSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentCaptureSeqSpecified {
            get {
                return this.documentCaptureSeqFieldSpecified;
            }
            set {
                this.documentCaptureSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stationIdSpecified {
            get {
                return this.stationIdFieldSpecified;
            }
            set {
                this.stationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class docQueueDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private int batchPriorityField;
        
        private bool batchPriorityFieldSpecified;
        
        private int batchTotalDocsField;
        
        private bool batchTotalDocsFieldSpecified;
        
        private int documentCaptureSeqField;
        
        private bool documentCaptureSeqFieldSpecified;
        
        private string documentFileTypeBackField;
        
        private string documentFileTypeFrontField;
        
        private long documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private int documentStatusField;
        
        private bool documentStatusFieldSpecified;
        
        private decimal documentValueField;
        
        private bool documentValueFieldSpecified;
        
        private string documentXmlField;
        
        private long siteIdField;
        
        private bool siteIdFieldSpecified;
        
        private long transIdField;
        
        private bool transIdFieldSpecified;
        
        private string typeAliasField;
        
        private long typeIdField;
        
        private bool typeIdFieldSpecified;
        
        private string typeNameField;
        
        private int typeOperationField;
        
        private bool typeOperationFieldSpecified;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchPriority {
            get {
                return this.batchPriorityField;
            }
            set {
                this.batchPriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchPrioritySpecified {
            get {
                return this.batchPriorityFieldSpecified;
            }
            set {
                this.batchPriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchTotalDocs {
            get {
                return this.batchTotalDocsField;
            }
            set {
                this.batchTotalDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchTotalDocsSpecified {
            get {
                return this.batchTotalDocsFieldSpecified;
            }
            set {
                this.batchTotalDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentCaptureSeq {
            get {
                return this.documentCaptureSeqField;
            }
            set {
                this.documentCaptureSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentCaptureSeqSpecified {
            get {
                return this.documentCaptureSeqFieldSpecified;
            }
            set {
                this.documentCaptureSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentFileTypeBack {
            get {
                return this.documentFileTypeBackField;
            }
            set {
                this.documentFileTypeBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentFileTypeFront {
            get {
                return this.documentFileTypeFrontField;
            }
            set {
                this.documentFileTypeFrontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentStatusSpecified {
            get {
                return this.documentStatusFieldSpecified;
            }
            set {
                this.documentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal documentValue {
            get {
                return this.documentValueField;
            }
            set {
                this.documentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentValueSpecified {
            get {
                return this.documentValueFieldSpecified;
            }
            set {
                this.documentValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentXml {
            get {
                return this.documentXmlField;
            }
            set {
                this.documentXmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteIdSpecified {
            get {
                return this.siteIdFieldSpecified;
            }
            set {
                this.siteIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long transId {
            get {
                return this.transIdField;
            }
            set {
                this.transIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transIdSpecified {
            get {
                return this.transIdFieldSpecified;
            }
            set {
                this.transIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeAlias {
            get {
                return this.typeAliasField;
            }
            set {
                this.typeAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeIdSpecified {
            get {
                return this.typeIdFieldSpecified;
            }
            set {
                this.typeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int typeOperation {
            get {
                return this.typeOperationField;
            }
            set {
                this.typeOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeOperationSpecified {
            get {
                return this.typeOperationFieldSpecified;
            }
            set {
                this.typeOperationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class batchQueueDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private int batchPriorityField;
        
        private bool batchPriorityFieldSpecified;
        
        private int batchTotalDocsField;
        
        private bool batchTotalDocsFieldSpecified;
        
        private docQueueDto[] docQueueDtosField;
        
        private long siteIdField;
        
        private bool siteIdFieldSpecified;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchPriority {
            get {
                return this.batchPriorityField;
            }
            set {
                this.batchPriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchPrioritySpecified {
            get {
                return this.batchPriorityFieldSpecified;
            }
            set {
                this.batchPriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int batchTotalDocs {
            get {
                return this.batchTotalDocsField;
            }
            set {
                this.batchTotalDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchTotalDocsSpecified {
            get {
                return this.batchTotalDocsFieldSpecified;
            }
            set {
                this.batchTotalDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("docQueueDtos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public docQueueDto[] docQueueDtos {
            get {
                return this.docQueueDtosField;
            }
            set {
                this.docQueueDtosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteIdSpecified {
            get {
                return this.siteIdFieldSpecified;
            }
            set {
                this.siteIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class pendingDto {
        
        private System.DateTime pendingDateField;
        
        private bool pendingDateFieldSpecified;
        
        private long pendingIdField;
        
        private bool pendingIdFieldSpecified;
        
        private string pendingReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime pendingDate {
            get {
                return this.pendingDateField;
            }
            set {
                this.pendingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pendingDateSpecified {
            get {
                return this.pendingDateFieldSpecified;
            }
            set {
                this.pendingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long pendingId {
            get {
                return this.pendingIdField;
            }
            set {
                this.pendingIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pendingIdSpecified {
            get {
                return this.pendingIdFieldSpecified;
            }
            set {
                this.pendingIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pendingReason {
            get {
                return this.pendingReasonField;
            }
            set {
                this.pendingReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class exceptionDto {
        
        private int exceptionAuthTypeField;
        
        private bool exceptionAuthTypeFieldSpecified;
        
        private long exceptionIdField;
        
        private bool exceptionIdFieldSpecified;
        
        private string exceptionNameField;
        
        private int exceptionOriginField;
        
        private bool exceptionOriginFieldSpecified;
        
        private string exceptionOsfField;
        
        private int exceptionPendingField;
        
        private bool exceptionPendingFieldSpecified;
        
        private int exceptionTypeField;
        
        private bool exceptionTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int exceptionAuthType {
            get {
                return this.exceptionAuthTypeField;
            }
            set {
                this.exceptionAuthTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exceptionAuthTypeSpecified {
            get {
                return this.exceptionAuthTypeFieldSpecified;
            }
            set {
                this.exceptionAuthTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long exceptionId {
            get {
                return this.exceptionIdField;
            }
            set {
                this.exceptionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exceptionIdSpecified {
            get {
                return this.exceptionIdFieldSpecified;
            }
            set {
                this.exceptionIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string exceptionName {
            get {
                return this.exceptionNameField;
            }
            set {
                this.exceptionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int exceptionOrigin {
            get {
                return this.exceptionOriginField;
            }
            set {
                this.exceptionOriginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exceptionOriginSpecified {
            get {
                return this.exceptionOriginFieldSpecified;
            }
            set {
                this.exceptionOriginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string exceptionOsf {
            get {
                return this.exceptionOsfField;
            }
            set {
                this.exceptionOsfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int exceptionPending {
            get {
                return this.exceptionPendingField;
            }
            set {
                this.exceptionPendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exceptionPendingSpecified {
            get {
                return this.exceptionPendingFieldSpecified;
            }
            set {
                this.exceptionPendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int exceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exceptionTypeSpecified {
            get {
                return this.exceptionTypeFieldSpecified;
            }
            set {
                this.exceptionTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class documentDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private int documentCaptureSeqField;
        
        private bool documentCaptureSeqFieldSpecified;
        
        private System.DateTime documentCreatedField;
        
        private bool documentCreatedFieldSpecified;
        
        private byte[] documentFileBackField;
        
        private byte[] documentFileFrontField;
        
        private int documentFileSizeBackField;
        
        private bool documentFileSizeBackFieldSpecified;
        
        private int documentFileSizeFrontField;
        
        private bool documentFileSizeFrontFieldSpecified;
        
        private string documentFileTypeBackField;
        
        private string documentFileTypeFrontField;
        
        private string documentHashFileField;
        
        private string documentHashFileBackField;
        
        private string documentHashXmlField;
        
        private string documentHashXmlBackField;
        
        private long documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private int documentNsuField;
        
        private bool documentNsuFieldSpecified;
        
        private int documentNsuHostField;
        
        private bool documentNsuHostFieldSpecified;
        
        private string documentNumberField;
        
        private string documentReasonField;
        
        private int documentStatusField;
        
        private bool documentStatusFieldSpecified;
        
        private decimal documentValueField;
        
        private bool documentValueFieldSpecified;
        
        private string documentXmlField;
        
        private exceptionDto[] exceptionDtoListField;
        
        private pendingDto[] pendingDtoListField;
        
        private bool receiptField;
        
        private int siteExternalIdField;
        
        private bool siteExternalIdFieldSpecified;
        
        private string siteNameField;
        
        private long transIdField;
        
        private bool transIdFieldSpecified;
        
        private string typeAliasField;
        
        private long typeIdField;
        
        private bool typeIdFieldSpecified;
        
        private int typeOperationField;
        
        private bool typeOperationFieldSpecified;
        
        private int typeReceiptField;
        
        private bool typeReceiptFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentCaptureSeq {
            get {
                return this.documentCaptureSeqField;
            }
            set {
                this.documentCaptureSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentCaptureSeqSpecified {
            get {
                return this.documentCaptureSeqFieldSpecified;
            }
            set {
                this.documentCaptureSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime documentCreated {
            get {
                return this.documentCreatedField;
            }
            set {
                this.documentCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentCreatedSpecified {
            get {
                return this.documentCreatedFieldSpecified;
            }
            set {
                this.documentCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] documentFileBack {
            get {
                return this.documentFileBackField;
            }
            set {
                this.documentFileBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] documentFileFront {
            get {
                return this.documentFileFrontField;
            }
            set {
                this.documentFileFrontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentFileSizeBack {
            get {
                return this.documentFileSizeBackField;
            }
            set {
                this.documentFileSizeBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentFileSizeBackSpecified {
            get {
                return this.documentFileSizeBackFieldSpecified;
            }
            set {
                this.documentFileSizeBackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentFileSizeFront {
            get {
                return this.documentFileSizeFrontField;
            }
            set {
                this.documentFileSizeFrontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentFileSizeFrontSpecified {
            get {
                return this.documentFileSizeFrontFieldSpecified;
            }
            set {
                this.documentFileSizeFrontFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentFileTypeBack {
            get {
                return this.documentFileTypeBackField;
            }
            set {
                this.documentFileTypeBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentFileTypeFront {
            get {
                return this.documentFileTypeFrontField;
            }
            set {
                this.documentFileTypeFrontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentHashFile {
            get {
                return this.documentHashFileField;
            }
            set {
                this.documentHashFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentHashFileBack {
            get {
                return this.documentHashFileBackField;
            }
            set {
                this.documentHashFileBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentHashXml {
            get {
                return this.documentHashXmlField;
            }
            set {
                this.documentHashXmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentHashXmlBack {
            get {
                return this.documentHashXmlBackField;
            }
            set {
                this.documentHashXmlBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentNsu {
            get {
                return this.documentNsuField;
            }
            set {
                this.documentNsuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentNsuSpecified {
            get {
                return this.documentNsuFieldSpecified;
            }
            set {
                this.documentNsuFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentNsuHost {
            get {
                return this.documentNsuHostField;
            }
            set {
                this.documentNsuHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentNsuHostSpecified {
            get {
                return this.documentNsuHostFieldSpecified;
            }
            set {
                this.documentNsuHostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentNumber {
            get {
                return this.documentNumberField;
            }
            set {
                this.documentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentReason {
            get {
                return this.documentReasonField;
            }
            set {
                this.documentReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentStatusSpecified {
            get {
                return this.documentStatusFieldSpecified;
            }
            set {
                this.documentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal documentValue {
            get {
                return this.documentValueField;
            }
            set {
                this.documentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentValueSpecified {
            get {
                return this.documentValueFieldSpecified;
            }
            set {
                this.documentValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentXml {
            get {
                return this.documentXmlField;
            }
            set {
                this.documentXmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceptionDtoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public exceptionDto[] exceptionDtoList {
            get {
                return this.exceptionDtoListField;
            }
            set {
                this.exceptionDtoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pendingDtoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public pendingDto[] pendingDtoList {
            get {
                return this.pendingDtoListField;
            }
            set {
                this.pendingDtoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool receipt {
            get {
                return this.receiptField;
            }
            set {
                this.receiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int siteExternalId {
            get {
                return this.siteExternalIdField;
            }
            set {
                this.siteExternalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteExternalIdSpecified {
            get {
                return this.siteExternalIdFieldSpecified;
            }
            set {
                this.siteExternalIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long transId {
            get {
                return this.transIdField;
            }
            set {
                this.transIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transIdSpecified {
            get {
                return this.transIdFieldSpecified;
            }
            set {
                this.transIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeAlias {
            get {
                return this.typeAliasField;
            }
            set {
                this.typeAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeIdSpecified {
            get {
                return this.typeIdFieldSpecified;
            }
            set {
                this.typeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int typeOperation {
            get {
                return this.typeOperationField;
            }
            set {
                this.typeOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeOperationSpecified {
            get {
                return this.typeOperationFieldSpecified;
            }
            set {
                this.typeOperationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int typeReceipt {
            get {
                return this.typeReceiptField;
            }
            set {
                this.typeReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeReceiptSpecified {
            get {
                return this.typeReceiptFieldSpecified;
            }
            set {
                this.typeReceiptFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flexps.flexdoc.com.br/")]
    public partial class transQueueDto {
        
        private long batchIdField;
        
        private bool batchIdFieldSpecified;
        
        private decimal difValueField;
        
        private bool difValueFieldSpecified;
        
        private documentDto[] documentDtoListField;
        
        private long siteIdField;
        
        private bool siteIdFieldSpecified;
        
        private long transIdField;
        
        private bool transIdFieldSpecified;
        
        private int transTotDocsField;
        
        private bool transTotDocsFieldSpecified;
        
        private int transTypeField;
        
        private bool transTypeFieldSpecified;
        
        private long workflowIdField;
        
        private bool workflowIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long batchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool batchIdSpecified {
            get {
                return this.batchIdFieldSpecified;
            }
            set {
                this.batchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal difValue {
            get {
                return this.difValueField;
            }
            set {
                this.difValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool difValueSpecified {
            get {
                return this.difValueFieldSpecified;
            }
            set {
                this.difValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("documentDtoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public documentDto[] documentDtoList {
            get {
                return this.documentDtoListField;
            }
            set {
                this.documentDtoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool siteIdSpecified {
            get {
                return this.siteIdFieldSpecified;
            }
            set {
                this.siteIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long transId {
            get {
                return this.transIdField;
            }
            set {
                this.transIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transIdSpecified {
            get {
                return this.transIdFieldSpecified;
            }
            set {
                this.transIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int transTotDocs {
            get {
                return this.transTotDocsField;
            }
            set {
                this.transTotDocsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transTotDocsSpecified {
            get {
                return this.transTotDocsFieldSpecified;
            }
            set {
                this.transTotDocsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int transType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transTypeSpecified {
            get {
                return this.transTypeFieldSpecified;
            }
            set {
                this.transTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long workflowId {
            get {
                return this.workflowIdField;
            }
            set {
                this.workflowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workflowIdSpecified {
            get {
                return this.workflowIdFieldSpecified;
            }
            set {
                this.workflowIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMonitoringCompletedEventHandler(object sender, getMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queueMonitoringDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queueMonitoringDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getTransInQueueCompletedEventHandler(object sender, getTransInQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransInQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransInQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public transQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transQueueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void abortBatchInQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void refreshTransCompletedEventHandler(object sender, refreshTransCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refreshTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refreshTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public transQueueDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transQueueDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void refreshBatchCompletedEventHandler(object sender, refreshBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refreshBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refreshBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public batchQueueDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((batchQueueDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getAutomaticQueueCompletedEventHandler(object sender, getAutomaticQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutomaticQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutomaticQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getDocsInQueueCompletedEventHandler(object sender, getDocsInQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocsInQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocsInQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public docQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((docQueueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getDocsInQueueForSystemCompletedEventHandler(object sender, getDocsInQueueForSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocsInQueueForSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocsInQueueForSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public docQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((docQueueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void abortDocsInQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getBatchInQueueCompletedEventHandler(object sender, getBatchInQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchInQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchInQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public batchQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((batchQueueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getDocsInQueueByWorkflowCompletedEventHandler(object sender, getDocsInQueueByWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocsInQueueByWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocsInQueueByWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public docQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((docQueueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void abortTransInQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getRobotInQueueCompletedEventHandler(object sender, getRobotInQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRobotInQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRobotInQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public robotQueueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((robotQueueDto[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591